Project.export("@form-props",new Interface({requires:{vue:!0,jquery:!0},elements:{vue:["#modal_edit_props"]},vue:{delimiters:["{","}"],el:"#modal_edit_props",data:{meta:{},fields:[],component:[],props:[],type:"update"},mounted:()=>{},methods:{open:function(a){this.event=a;const b=jQuery("#modal_edit_props"),c=new WPAjax("Compound-getProps",a);this.fields=[],this.meta={},c.then(a=>{if(!0===a.data.success){if("object"==typeof a.data.data.props)for(const[b,c]of Object.entries(a.data.data.props))this.fields.push({name:b,value:c}),this.props[b]=c;"object"==typeof a.data.data.meta&&(this.meta=a.data.data.meta)}}),tb_show("Edit props of component","/?TB_inline&inlineId=modal_edit_props&width=600&height=700")},submit:function(){const a=new WPAjax("Compound-updateProps",Object.assign(this.event,{type:this.type},{props:this.props}));a.then(()=>{tb_remove()})}}},ready:function(){}}));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb3BzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sQ0FBQyxNQUFSLENBQWUsYUFBZixDQUE4QixHQUFJLENBQUEsU0FBSixDQUFlLENBQ3pDLFFBQVEsQ0FBRSxDQUNOLEdBQUcsR0FERyxDQUVOLE1BQU0sR0FGQSxDQUQrQixDQUt6QyxRQUFRLENBQUUsQ0FDTixHQUFHLENBQUUsQ0FBQyxtQkFBRCxDQURDLENBTCtCLENBUXpDLEdBQUcsQ0FBRSxDQUNELFVBQVUsQ0FBRSxDQUFDLEdBQUQsQ0FBTSxHQUFOLENBRFgsQ0FFRCxFQUFFLENBQUUsbUJBRkgsQ0FHRCxJQUFJLENBQUUsQ0FDRixJQUFJLENBQUUsRUFESixDQUVGLE1BQU0sQ0FBRSxFQUZOLENBR0YsU0FBUyxDQUFFLEVBSFQsQ0FJRixLQUFLLENBQUUsRUFKTCxDQUtGLElBQUksQ0FBRSxRQUxKLENBSEwsQ0FVRCxPQUFPLENBQUUsSUFBUyxDQUFFLENBVm5CLENBV0QsT0FBTyxDQUFFLENBQ0wsSUFBSSxDQUFFLFNBQVUsQ0FBVixDQUFpQixDQUVuQixLQUFLLEtBQUwsQ0FBYSxDQUZNLE1BS2IsQ0FBQSxDQUFNLENBQUcsTUFBTSxDQUFDLG1CQUFELENBTEYsQ0FRYixDQUFPLENBQUcsR0FBSSxDQUFBLE1BQUosQ0FBVyxtQkFBWCxDQUFnQyxDQUFoQyxDQVJHLENBVW5CLEtBQUssTUFBTCxDQUFjLEVBVkssQ0FXbkIsS0FBSyxJQUFMLENBQVksRUFYTyxDQWFuQixDQUFPLENBQUMsSUFBUixDQUFhLENBQUssRUFBSSxDQUNsQixHQUFJLEtBQUEsQ0FBSyxDQUFDLElBQU4sQ0FBVyxPQUFmLENBQWlDLENBQzdCLEdBQW9DLFFBQWhDLFFBQU8sQ0FBQSxDQUFLLENBQUMsSUFBTixDQUFXLElBQVgsQ0FBZ0IsS0FBM0IsQ0FDSSxJQUFLLEtBQU0sQ0FBQyxDQUFELENBQU8sQ0FBUCxDQUFYLEVBQTRCLENBQUEsTUFBTSxDQUFDLE9BQVAsQ0FBZSxDQUFLLENBQUMsSUFBTixDQUFXLElBQVgsQ0FBZ0IsS0FBL0IsQ0FBNUIsQ0FDSSxLQUFLLE1BQUwsQ0FBWSxJQUFaLENBQWlCLENBQ2IsSUFBSSxDQUFFLENBRE8sQ0FFYixLQUFLLENBQUUsQ0FGTSxDQUFqQixDQURKLENBTUksS0FBSyxLQUFMLENBQVcsQ0FBWCxFQUFtQixDQU52QixDQVUrQixRQUEvQixRQUFPLENBQUEsQ0FBSyxDQUFDLElBQU4sQ0FBVyxJQUFYLENBQWdCLElBWkUsR0FhekIsS0FBSyxJQUFMLENBQVksQ0FBSyxDQUFDLElBQU4sQ0FBVyxJQUFYLENBQWdCLElBYkgsQ0FlaEMsQ0FDSixDQWpCRCxDQWJtQixDQWdDbkIsT0FBTyxDQUFDLHlCQUFELENBQTRCLDREQUE1QixDQUVWLENBbkNJLENBcUNMLE1BQU0sQ0FBRSxVQUFpQixDQUNyQixLQUFNLENBQUEsQ0FBTyxDQUFHLEdBQUksQ0FBQSxNQUFKLENBQVcsc0JBQVgsQ0FBbUMsTUFBTSxDQUFDLE1BQVAsQ0FBYyxLQUFLLEtBQW5CLENBQTBCLENBQ3pFLElBQUksQ0FBRSxLQUFLLElBRDhELENBQTFCLENBRWhELENBQ0MsS0FBSyxDQUFFLEtBQUssS0FEYixDQUZnRCxDQUFuQyxDQUFoQixDQU1BLENBQU8sQ0FBQyxJQUFSLENBQWEsSUFBUyxDQUNsQixTQUFTLEVBQ1osQ0FGRCxDQUdILENBL0NJLENBWFIsQ0FSb0MsQ0FxRXpDLEtBQUssQ0FBRSxVQUFvQixDQUUxQixDQXZFd0MsQ0FBZixDQUE5QixDIiwiZmlsZSI6InByb3BzLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlByb2plY3QuZXhwb3J0KCdAZm9ybS1wcm9wcycsIG5ldyBJbnRlcmZhY2UgKHtcbiAgICByZXF1aXJlczoge1xuICAgICAgICB2dWU6IHRydWUsXG4gICAgICAgIGpxdWVyeTogdHJ1ZVxuICAgIH0sXG4gICAgZWxlbWVudHM6IHtcbiAgICAgICAgdnVlOiBbJyNtb2RhbF9lZGl0X3Byb3BzJ11cbiAgICB9LFxuICAgIHZ1ZToge1xuICAgICAgICBkZWxpbWl0ZXJzOiBbJ3snLCAnfSddLFxuICAgICAgICBlbDogXCIjbW9kYWxfZWRpdF9wcm9wc1wiLFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBtZXRhOiB7fSxcbiAgICAgICAgICAgIGZpZWxkczogW10sXG4gICAgICAgICAgICBjb21wb25lbnQ6IFtdLFxuICAgICAgICAgICAgcHJvcHM6IFtdLFxuICAgICAgICAgICAgdHlwZTogJ3VwZGF0ZSdcbiAgICAgICAgfSxcbiAgICAgICAgbW91bnRlZDogRXZlbnQgPT4ge30sXG4gICAgICAgIG1ldGhvZHM6IHtcbiAgICAgICAgICAgIG9wZW46IGZ1bmN0aW9uIChldmVudCkge1xuXG4gICAgICAgICAgICAgICAgdGhpcy5ldmVudCA9IGV2ZW50O1xuXG4gICAgICAgICAgICAgICAgLy8gTG9hZCBtb2RhbFxuICAgICAgICAgICAgICAgIGNvbnN0ICRtb2RhbCA9IGpRdWVyeSgnI21vZGFsX2VkaXRfcHJvcHMnKTtcblxuICAgICAgICAgICAgICAgIC8vIENyZWF0ZSByZXF1ZXN0XG4gICAgICAgICAgICAgICAgY29uc3QgUmVxdWVzdCA9IG5ldyBXUEFqYXgoJ0NvbXBvdW5kLWdldFByb3BzJywgZXZlbnQpO1xuXG4gICAgICAgICAgICAgICAgdGhpcy5maWVsZHMgPSBbXTtcbiAgICAgICAgICAgICAgICB0aGlzLm1ldGEgPSB7fTtcblxuICAgICAgICAgICAgICAgIFJlcXVlc3QudGhlbihFdmVudCA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChFdmVudC5kYXRhLnN1Y2Nlc3MgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgRXZlbnQuZGF0YS5kYXRhLnByb3BzID09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBbbmFtZSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKEV2ZW50LmRhdGEuZGF0YS5wcm9wcykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5maWVsZHMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBuYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucHJvcHNbbmFtZV0gPSB2YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgRXZlbnQuZGF0YS5kYXRhLm1ldGEgPT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1ldGEgPSBFdmVudC5kYXRhLmRhdGEubWV0YTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgdGJfc2hvdygnRWRpdCBwcm9wcyBvZiBjb21wb25lbnQnLCAnLz9UQl9pbmxpbmUmaW5saW5lSWQ9bW9kYWxfZWRpdF9wcm9wcyZ3aWR0aD02MDAmaGVpZ2h0PTcwMCcpO1xuXG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICBzdWJtaXQ6IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IFJlcXVlc3QgPSBuZXcgV1BBamF4KCdDb21wb3VuZC11cGRhdGVQcm9wcycsIE9iamVjdC5hc3NpZ24odGhpcy5ldmVudCwge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiB0aGlzLnR5cGVcbiAgICAgICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgIHByb3BzOiB0aGlzLnByb3BzXG4gICAgICAgICAgICAgICAgfSkpO1xuXG4gICAgICAgICAgICAgICAgUmVxdWVzdC50aGVuKEV2ZW50ID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGJfcmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sXG4gICAgcmVhZHk6IGZ1bmN0aW9uIChFdmVudCwgJCkge1xuXG4gICAgfVxufSkpOyJdfQ==