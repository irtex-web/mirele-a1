"use strict";const $page=parseInt(jQuery("meta[name=\"page\"]").attr("content")),CompoundEditor=Project.export("editor",new Interface({requires:{vue:!0,jquery:!0},elements:{vue:["#compound-editor-body"]},vue:{delimiters:["{","}"],el:"#compound-editor-body",data:{markup:[]},mounted:function(){this.__updateMarkup().then(()=>{jQuery("[data-component=\"body\"][data-namespace=\"editor\"]").removeClass("hidden"),jQuery("[data-component=\"spinner\"][data-namespace=\"editor\"]").addClass("hidden"),jQuery("[data-behavior=\"sortable\"]").sortable({tolerance:"pointer",placeholder:"wp-mrl-placeholder",connectWith:jQuery("[data-behavior=\"droppable\"][data-namespace=\"editor\"]"),helper:"clone",opacity:.5,cursor:"move",forcePlaceholderSize:!0,revert:80,update:function(){var a=[];for(const[b,c]of Object.entries(jQuery("[data-component=\"field\"][data-namespace=\"editor\"]"))){const b=jQuery(c).attr("data-id");b&&a.push(b)}new WPAjax("Compound-sort",{page:$page,order:a})},start:(a,b)=>{jQuery("[data-role=\"trash\"][data-namespace=\"editor\"]").removeClass("hidden"),this.__renderDroppable(),this.__renderPlaceholder(b)},stop:()=>{jQuery("[data-role=\"trash\"][data-namespace=\"editor\"]").addClass("hidden")}})}).catch(()=>{jQuery("[data-component=\"error\"][data-namespace=\"editor\"]").removeClass("hidden"),jQuery("[data-component=\"spinner\"][data-namespace=\"editor\"]").addClass("hidden")})},methods:{editProps:function(a){const b=Project.import("@form-props").vue;return b.__editor=this,b.open(Object.assign({page:$page},a))},insertComponent:function(a){const b=Project.import("@form-createComponent").vue;return b.__editor=this,b.open(Object.assign({page:$page},a))},__metaFieldClass__:function(a){const b=(a||{}).editor||{};return`wp-mrl-field col-${b.col||12}`},__updateMarkup:function(){return new Promise((a,b)=>{const c=new WPAjax("Compound-getMarkup",{page:$page});c.then(b=>{var c=[];for(const[a,d]of Object.entries(b.data.data))c.push({name:d.props.name||"default",id:a,fields:d.fields,props:d.props});this.markup=c,a(b.data.data)}).catch(a=>{b(a)})})},__renderDroppable:function(){return jQuery("[data-behavior=\"droppable\"]").droppable({accept:jQuery("[data-component=\"field\"][data-namespace=\"editor\"]"),activeClass:"wp-mrl-trash-active",hoverClass:"wp-mrl-trash-hover",drop:function(a,b){const c=jQuery(b.helper.context).attr("data-id"),d=jQuery(b.helper.context).attr("data-page-id"),e=new WPAjax("Compound-removeTemplate",{id:d,template:c});b.draggable.remove()}})},__renderPlaceholder:function(a){return a.placeholder.height(a.item.height())}}},ready:function(){}}));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,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ekIsQ0FDVixDQW5GSSxDQWhFUixDQVJzRCxDQThKM0QsS0FBSyxDQUFFLFVBQW9CLENBRTFCLENBaEswRCxDQUFmLENBQXpCLEMiLCJmaWxlIjoiY29tcG91bmQubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBXZWxjb21lIHRvIHRoZSBzb3VyY2UgY29kZVxuICpcbiAqIOKWiOKWiOKWiOKVl+KWkeKWkeKWkeKWiOKWiOKWiOKVl+KWiOKWiOKVl+KWiOKWiOKWiOKWiOKWiOKWiOKVl+KWkeKWiOKWiOKWiOKWiOKWiOKWiOKWiOKVl+KWiOKWiOKVl+KWkeKWkeKWkeKWkeKWkeKWiOKWiOKWiOKWiOKWiOKWiOKWiOKVlyAgICAgICAg4paR4paR4paR4paR4paR4paI4paI4pWX4paR4paI4paI4paI4paI4paI4paI4pWXXG4gKiDilojilojilojilojilZfilpHilojilojilojilojilZHilojilojilZHilojilojilZTilZDilZDilojilojilZfilojilojilZTilZDilZDilZDilZDilZ3ilojilojilZHilpHilpHilpHilpHilpHilojilojilZTilZDilZDilZDilZDilZ0gICAgICAgIOKWkeKWkeKWkeKWkeKWkeKWiOKWiOKVkeKWiOKWiOKVlOKVkOKVkOKVkOKVkOKVnVxuICog4paI4paI4pWU4paI4paI4paI4paI4pWU4paI4paI4pWR4paI4paI4pWR4paI4paI4paI4paI4paI4paI4pWU4pWd4paI4paI4paI4paI4paI4pWX4paR4paR4paI4paI4pWR4paR4paR4paR4paR4paR4paI4paI4paI4paI4paI4pWX4paR4paRICAgICAgICDilpHilpHilpHilpHilpHilojilojilZHilZrilojilojilojilojilojilZfilpFcbiAqIOKWiOKWiOKVkeKVmuKWiOKWiOKVlOKVneKWiOKWiOKVkeKWiOKWiOKVkeKWiOKWiOKVlOKVkOKVkOKWiOKWiOKVl+KWiOKWiOKVlOKVkOKVkOKVneKWkeKWkeKWiOKWiOKVkeKWkeKWkeKWkeKWkeKWkeKWiOKWiOKVlOKVkOKVkOKVneKWkeKWkSAgICAgICAg4paI4paI4pWX4paR4paR4paI4paI4pWR4paR4pWa4pWQ4pWQ4pWQ4paI4paI4pWXXG4gKiDilojilojilZHilpHilZrilZDilZ3ilpHilojilojilZHilojilojilZHilojilojilZHilpHilpHilojilojilZHilojilojilojilojilojilojilojilZfilojilojilojilojilojilojilojilZfilojilojilojilojilojilojilojilZcgICAgICAgIOKVmuKWiOKWiOKWiOKWiOKWiOKVlOKVneKWiOKWiOKWiOKWiOKWiOKWiOKVlOKVnVxuICog4pWa4pWQ4pWd4paR4paR4paR4paR4paR4pWa4pWQ4pWd4pWa4pWQ4pWd4pWa4pWQ4pWd4paR4paR4pWa4pWQ4pWd4pWa4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWd4pWa4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWd4pWa4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWdICAgICAgICDilpHilZrilZDilZDilZDilZDilZ3ilpHilZrilZDilZDilZDilZDilZDilZ3ilpFcbiAqXG4gKiDilpHilojilojilojilojilojilZfilpHilojilojilojilojilojilojilZfilpHilojilojilojilZfilpHilpHilpHilojilojilojilZfilojilojilZfilojilojilojilZfilpHilpHilojilojilZfilojilojilZfilpHilojilojilojilojilojilojilZfilojilojilojilojilojilojilojilojilZfilojilojilojilojilojilojilZfilpHilpHilojilojilojilojilojilZfilpHilojilojilojilojilojilojilojilojilZfilpHilojilojilojilojilojilZfilpHilojilojilojilojilojilojilZfilpFcbiAqIOKWiOKWiOKVlOKVkOKVkOKWiOKWiOKVl+KWiOKWiOKVlOKVkOKVkOKWiOKWiOKVl+KWiOKWiOKWiOKWiOKVl+KWkeKWiOKWiOKWiOKWiOKVkeKWiOKWiOKVkeKWiOKWiOKWiOKWiOKVl+KWkeKWiOKWiOKVkeKWiOKWiOKVkeKWiOKWiOKVlOKVkOKVkOKVkOKVkOKVneKVmuKVkOKVkOKWiOKWiOKVlOKVkOKVkOKVneKWiOKWiOKVlOKVkOKVkOKWiOKWiOKVl+KWiOKWiOKVlOKVkOKVkOKWiOKWiOKVl+KVmuKVkOKVkOKWiOKWiOKVlOKVkOKVkOKVneKWiOKWiOKVlOKVkOKVkOKWiOKWiOKVl+KWiOKWiOKVlOKVkOKVkOKWiOKWiOKVl1xuICog4paI4paI4paI4paI4paI4paI4paI4pWR4paI4paI4pWR4paR4paR4paI4paI4pWR4paI4paI4pWU4paI4paI4paI4paI4pWU4paI4paI4pWR4paI4paI4pWR4paI4paI4pWU4paI4paI4pWX4paI4paI4pWR4paI4paI4pWR4pWa4paI4paI4paI4paI4paI4pWX4paR4paR4paR4paR4paI4paI4pWR4paR4paR4paR4paI4paI4paI4paI4paI4paI4pWU4pWd4paI4paI4paI4paI4paI4paI4paI4pWR4paR4paR4paR4paI4paI4pWR4paR4paR4paR4paI4paI4pWR4paR4paR4paI4paI4pWR4paI4paI4paI4paI4paI4paI4pWU4pWdXG4gKiDilojilojilZTilZDilZDilojilojilZHilojilojilZHilpHilpHilojilojilZHilojilojilZHilZrilojilojilZTilZ3ilojilojilZHilojilojilZHilojilojilZHilZrilojilojilojilojilZHilojilojilZHilpHilZrilZDilZDilZDilojilojilZfilpHilpHilpHilojilojilZHilpHilpHilpHilojilojilZTilZDilZDilojilojilZfilojilojilZTilZDilZDilojilojilZHilpHilpHilpHilojilojilZHilpHilpHilpHilojilojilZHilpHilpHilojilojilZHilojilojilZTilZDilZDilojilojilZdcbiAqIOKWiOKWiOKVkeKWkeKWkeKWiOKWiOKVkeKWiOKWiOKWiOKWiOKWiOKWiOKVlOKVneKWiOKWiOKVkeKWkeKVmuKVkOKVneKWkeKWiOKWiOKVkeKWiOKWiOKVkeKWiOKWiOKVkeKWkeKVmuKWiOKWiOKWiOKVkeKWiOKWiOKVkeKWiOKWiOKWiOKWiOKWiOKWiOKVlOKVneKWkeKWkeKWkeKWiOKWiOKVkeKWkeKWkeKWkeKWiOKWiOKVkeKWkeKWkeKWiOKWiOKVkeKWiOKWiOKVkeKWkeKWkeKWiOKWiOKVkeKWkeKWkeKWkeKWiOKWiOKVkeKWkeKWkeKWkeKVmuKWiOKWiOKWiOKWiOKWiOKVlOKVneKWiOKWiOKVkeKWkeKWkeKWiOKWiOKVkVxuICog4pWa4pWQ4pWd4paR4paR4pWa4pWQ4pWd4pWa4pWQ4pWQ4pWQ4pWQ4pWQ4pWd4paR4pWa4pWQ4pWd4paR4paR4paR4paR4paR4pWa4pWQ4pWd4pWa4pWQ4pWd4pWa4pWQ4pWd4paR4paR4pWa4pWQ4pWQ4pWd4pWa4pWQ4pWd4pWa4pWQ4pWQ4pWQ4pWQ4pWQ4pWd4paR4paR4paR4paR4pWa4pWQ4pWd4paR4paR4paR4pWa4pWQ4pWd4paR4paR4pWa4pWQ4pWd4pWa4pWQ4pWd4paR4paR4pWa4pWQ4pWd4paR4paR4paR4pWa4pWQ4pWd4paR4paR4paR4paR4pWa4pWQ4pWQ4pWQ4pWQ4pWd4paR4pWa4pWQ4pWd4paR4paR4pWa4pWQ4pWdXG4gKlxuICpcbiAqXG4gKiBAcGFja2FnZSBNaXJlbGVcbiAqIEBhdXRob3IgTWlyZWxlXG4gKiBAdmVyc2lvbiAxLjAuMFxuICpcbiAqIEBzZWUgaHR0cHM6Ly92dWVqcy5vcmcvdjIvZ3VpZGUvXG4gKi9cblxuXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0ICRwYWdlID0gcGFyc2VJbnQoalF1ZXJ5KCdtZXRhW25hbWU9XCJwYWdlXCJdJykuYXR0cignY29udGVudCcpKTtcblxuY29uc3QgQ29tcG91bmRFZGl0b3IgPSBQcm9qZWN0LmV4cG9ydCgnZWRpdG9yJywgbmV3IEludGVyZmFjZSAoe1xuICAgIHJlcXVpcmVzOiB7XG4gICAgICAgIHZ1ZTogdHJ1ZSxcbiAgICAgICAganF1ZXJ5OiB0cnVlXG4gICAgfSxcbiAgICBlbGVtZW50czoge1xuICAgICAgICB2dWU6IFsnI2NvbXBvdW5kLWVkaXRvci1ib2R5J11cbiAgICB9LFxuICAgIHZ1ZToge1xuICAgICAgICBkZWxpbWl0ZXJzOiBbJ3snLCAnfSddLFxuICAgICAgICBlbDogXCIjY29tcG91bmQtZWRpdG9yLWJvZHlcIixcbiAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgbWFya3VwOiBbXVxuICAgICAgICB9LFxuICAgICAgICBtb3VudGVkOiBmdW5jdGlvbiAoRXZlbnQpIHtcblxuICAgICAgICAgICAgdGhpcy5fX3VwZGF0ZU1hcmt1cCgpLnRoZW4oRGF0YSA9PiB7XG5cbiAgICAgICAgICAgICAgICBqUXVlcnkoJ1tkYXRhLWNvbXBvbmVudD1cImJvZHlcIl1bZGF0YS1uYW1lc3BhY2U9XCJlZGl0b3JcIl0nKS5yZW1vdmVDbGFzcygnaGlkZGVuJyk7XG4gICAgICAgICAgICAgICAgalF1ZXJ5KCdbZGF0YS1jb21wb25lbnQ9XCJzcGlubmVyXCJdW2RhdGEtbmFtZXNwYWNlPVwiZWRpdG9yXCJdJykuYWRkQ2xhc3MoJ2hpZGRlbicpO1xuXG4gICAgICAgICAgICAgICAgalF1ZXJ5KCdbZGF0YS1iZWhhdmlvcj1cInNvcnRhYmxlXCJdJykuc29ydGFibGUoe1xuXG4gICAgICAgICAgICAgICAgICAgIHRvbGVyYW5jZTogXCJwb2ludGVyXCIsXG4gICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBcIndwLW1ybC1wbGFjZWhvbGRlclwiLFxuICAgICAgICAgICAgICAgICAgICBjb25uZWN0V2l0aDogalF1ZXJ5KCdbZGF0YS1iZWhhdmlvcj1cImRyb3BwYWJsZVwiXVtkYXRhLW5hbWVzcGFjZT1cImVkaXRvclwiXScpLFxuICAgICAgICAgICAgICAgICAgICBoZWxwZXI6ICdjbG9uZScsXG4gICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAuNSxcbiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBcIm1vdmVcIixcbiAgICAgICAgICAgICAgICAgICAgZm9yY2VQbGFjZWhvbGRlclNpemU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIHJldmVydDogODAsXG5cbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlOiBmdW5jdGlvbihldmVudCwgdWkpIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyICRvcmRlciA9IFtdO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFtpbmRleCwgZWxlbWVudF0gb2YgT2JqZWN0LmVudHJpZXMoalF1ZXJ5KCdbZGF0YS1jb21wb25lbnQ9XCJmaWVsZFwiXVtkYXRhLW5hbWVzcGFjZT1cImVkaXRvclwiXScpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0ICRpZCA9IGpRdWVyeShlbGVtZW50KS5hdHRyKCdkYXRhLWlkJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRpZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkb3JkZXIucHVzaCgkaWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgUmVxdWVzdCA9IG5ldyBXUEFqYXgoJ0NvbXBvdW5kLXNvcnQnLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFnZTogJHBhZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3JkZXI6ICRvcmRlclxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgc3RhcnQ6IChldmVudCwgdWkpID0+IHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgalF1ZXJ5KCdbZGF0YS1yb2xlPVwidHJhc2hcIl1bZGF0YS1uYW1lc3BhY2U9XCJlZGl0b3JcIl0nKS5yZW1vdmVDbGFzcygnaGlkZGVuJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9fcmVuZGVyRHJvcHBhYmxlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9fcmVuZGVyUGxhY2Vob2xkZXIodWkpO1xuXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHN0b3A6IChldmVudCwgdWkpID0+IHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgalF1ZXJ5KCdbZGF0YS1yb2xlPVwidHJhc2hcIl1bZGF0YS1uYW1lc3BhY2U9XCJlZGl0b3JcIl0nKS5hZGRDbGFzcygnaGlkZGVuJyk7XG5cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICB9KS5jYXRjaChEYXRhID0+IHtcblxuICAgICAgICAgICAgICAgIGpRdWVyeSgnW2RhdGEtY29tcG9uZW50PVwiZXJyb3JcIl1bZGF0YS1uYW1lc3BhY2U9XCJlZGl0b3JcIl0nKS5yZW1vdmVDbGFzcygnaGlkZGVuJyk7XG4gICAgICAgICAgICAgICAgalF1ZXJ5KCdbZGF0YS1jb21wb25lbnQ9XCJzcGlubmVyXCJdW2RhdGEtbmFtZXNwYWNlPVwiZWRpdG9yXCJdJykuYWRkQ2xhc3MoJ2hpZGRlbicpO1xuXG4gICAgICAgICAgICB9KTtcblxuXG4gICAgICAgIH0sXG4gICAgICAgIG1ldGhvZHM6IHtcblxuICAgICAgICAgICAgZWRpdFByb3BzOiBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgICAgICBjb25zdCAkZm9ybSA9IFByb2plY3QuaW1wb3J0KCdAZm9ybS1wcm9wcycpLnZ1ZTtcbiAgICAgICAgICAgICAgICAkZm9ybS5fX2VkaXRvciA9IHRoaXM7XG4gICAgICAgICAgICAgICAgcmV0dXJuICRmb3JtLm9wZW4oT2JqZWN0LmFzc2lnbih7XG4gICAgICAgICAgICAgICAgICAgIHBhZ2U6ICRwYWdlXG4gICAgICAgICAgICAgICAgfSwgZXZlbnQpKTtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIGluc2VydENvbXBvbmVudDogZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgJGZvcm0gPSBQcm9qZWN0LmltcG9ydCgnQGZvcm0tY3JlYXRlQ29tcG9uZW50JykudnVlO1xuICAgICAgICAgICAgICAgICRmb3JtLl9fZWRpdG9yID0gdGhpcztcbiAgICAgICAgICAgICAgICByZXR1cm4gJGZvcm0ub3BlbihPYmplY3QuYXNzaWduKHtcbiAgICAgICAgICAgICAgICAgICAgcGFnZTogJHBhZ2UsXG4gICAgICAgICAgICAgICAgfSwgZXZlbnQpKTtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIF9fbWV0YUZpZWxkQ2xhc3NfXzogZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgJGV2ZW50ID0gZXZlbnR8fHt9O1xuICAgICAgICAgICAgICAgIGNvbnN0ICRlZGl0b3IgPSAkZXZlbnQuZWRpdG9yfHx7fTtcbiAgICAgICAgICAgICAgICByZXR1cm4gYHdwLW1ybC1maWVsZCBjb2wtJHskZWRpdG9yLmNvbHx8MTJ9YDtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIF9fdXBkYXRlTWFya3VwOiBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIENyZWF0ZSBtYWluIHJlcXVlc3RcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgUmVxdWVzdCA9IG5ldyBXUEFqYXgoJ0NvbXBvdW5kLWdldE1hcmt1cCcsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZ2U6ICRwYWdlXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgIFJlcXVlc3QudGhlbihFdmVudCA9PiB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciAkYnVmZmVyID0gW107XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgW2lkLCB0ZW1wbGF0ZV0gb2YgT2JqZWN0LmVudHJpZXMoRXZlbnQuZGF0YS5kYXRhKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRidWZmZXIucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IHRlbXBsYXRlLnByb3BzLm5hbWUgfHwgJ2RlZmF1bHQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogaWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkczogdGVtcGxhdGUuZmllbGRzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9wczogdGVtcGxhdGUucHJvcHNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5tYXJrdXAgPSAkYnVmZmVyO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBSZXNvbHZlXG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKEV2ZW50LmRhdGEuZGF0YSk7XG5cbiAgICAgICAgICAgICAgICAgICAgfSkuY2F0Y2goRXZlbnQgPT4ge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBSZWplY3RcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChFdmVudCk7XG5cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICBfX3JlbmRlckRyb3BwYWJsZTogZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGpRdWVyeSgnW2RhdGEtYmVoYXZpb3I9XCJkcm9wcGFibGVcIl0nKS5kcm9wcGFibGUoe1xuICAgICAgICAgICAgICAgICAgICBhY2NlcHQ6IGpRdWVyeSgnW2RhdGEtY29tcG9uZW50PVwiZmllbGRcIl1bZGF0YS1uYW1lc3BhY2U9XCJlZGl0b3JcIl0nKSxcbiAgICAgICAgICAgICAgICAgICAgYWN0aXZlQ2xhc3M6ICd3cC1tcmwtdHJhc2gtYWN0aXZlJyxcbiAgICAgICAgICAgICAgICAgICAgaG92ZXJDbGFzczogJ3dwLW1ybC10cmFzaC1ob3ZlcicsXG5cbiAgICAgICAgICAgICAgICAgICAgZHJvcDogZnVuY3Rpb24oZXZlbnQsIHVpKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0ICR0ZW1wbGF0ZSA9IGpRdWVyeSh1aS5oZWxwZXIuY29udGV4dCkuYXR0cignZGF0YS1pZCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgJGlkID0galF1ZXJ5KHVpLmhlbHBlci5jb250ZXh0KS5hdHRyKCdkYXRhLXBhZ2UtaWQnKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgUmVxdWVzdCA9IG5ldyBXUEFqYXgoJ0NvbXBvdW5kLXJlbW92ZVRlbXBsYXRlJywge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiAkaWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGU6ICR0ZW1wbGF0ZVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHVpLmRyYWdnYWJsZS5yZW1vdmUoKTtcblxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICBfX3JlbmRlclBsYWNlaG9sZGVyOiBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZXZlbnQucGxhY2Vob2xkZXIuaGVpZ2h0KGV2ZW50Lml0ZW0uaGVpZ2h0KCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSxcbiAgICByZWFkeTogZnVuY3Rpb24gKEV2ZW50LCAkKSB7XG5cbiAgICB9XG59KSk7Il19