const org=class{};org.web=class{},org.compound=class{},org.data={},org.references={},org.references.form={},org.references.form.insert={},org.references.form.get={},org.references.form.get.component={},org.references.form.get.template={},org.references.form.update={},org.references.form.update.component={},org.references.form.update.template={},org.references.form.unset={},org.references.form.unset.component={},org.references.form.unset.template={},org.references.form.set={},org.references.form.set.component={},org.references.form.set.template={},org.references.form.upgrade={},org.references.form.upgrade.component={},org.references.form.upgrade.template={},org.references.form.sort={},org.references.form.sort.component={},org.references.form.sort.template={},org.references.form.init={},org.references.form.init.component={},org.references.form.init.template={},org.objects={};const app=new org;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZy5hcHAuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBS0EsS0FBTSxDQUFBLEdBQUcsQ0FBRyxLQUFNLEVBQWxCLENBR0EsR0FBRyxDQUFDLEdBQUosQ0FBVSxLQUFNLEUsQ0FFaEIsR0FBRyxDQUFDLFFBQUosQ0FBZSxLQUFNLEUsQ0FFckIsR0FBRyxDQUFDLElBQUosQ0FBVyxFLENBQ1gsR0FBRyxDQUFDLFVBQUosQ0FBaUIsRSxDQUNqQixHQUFHLENBQUMsVUFBSixDQUFlLElBQWYsQ0FBc0IsRSxDQUN0QixHQUFHLENBQUMsVUFBSixDQUFlLElBQWYsQ0FBb0IsTUFBcEIsQ0FBNkIsRSxDQUM3QixHQUFHLENBQUMsVUFBSixDQUFlLElBQWYsQ0FBb0IsR0FBcEIsQ0FBMEIsRSxDQUMxQixHQUFHLENBQUMsVUFBSixDQUFlLElBQWYsQ0FBb0IsR0FBcEIsQ0FBd0IsU0FBeEIsQ0FBb0MsRSxDQUNwQyxHQUFHLENBQUMsVUFBSixDQUFlLElBQWYsQ0FBb0IsR0FBcEIsQ0FBd0IsUUFBeEIsQ0FBbUMsRSxDQUNuQyxHQUFHLENBQUMsVUFBSixDQUFlLElBQWYsQ0FBb0IsTUFBcEIsQ0FBNkIsRSxDQUM3QixHQUFHLENBQUMsVUFBSixDQUFlLElBQWYsQ0FBb0IsTUFBcEIsQ0FBMkIsU0FBM0IsQ0FBdUMsRSxDQUN2QyxHQUFHLENBQUMsVUFBSixDQUFlLElBQWYsQ0FBb0IsTUFBcEIsQ0FBMkIsUUFBM0IsQ0FBc0MsRSxDQUN0QyxHQUFHLENBQUMsVUFBSixDQUFlLElBQWYsQ0FBb0IsS0FBcEIsQ0FBNEIsRSxDQUM1QixHQUFHLENBQUMsVUFBSixDQUFlLElBQWYsQ0FBb0IsS0FBcEIsQ0FBMEIsU0FBMUIsQ0FBc0MsRSxDQUN0QyxHQUFHLENBQUMsVUFBSixDQUFlLElBQWYsQ0FBb0IsS0FBcEIsQ0FBMEIsUUFBMUIsQ0FBcUMsRSxDQUNyQyxHQUFHLENBQUMsVUFBSixDQUFlLElBQWYsQ0FBb0IsR0FBcEIsQ0FBMEIsRSxDQUMxQixHQUFHLENBQUMsVUFBSixDQUFlLElBQWYsQ0FBb0IsR0FBcEIsQ0FBd0IsU0FBeEIsQ0FBb0MsRSxDQUNwQyxHQUFHLENBQUMsVUFBSixDQUFlLElBQWYsQ0FBb0IsR0FBcEIsQ0FBd0IsUUFBeEIsQ0FBbUMsRSxDQUNuQyxHQUFHLENBQUMsVUFBSixDQUFlLElBQWYsQ0FBb0IsT0FBcEIsQ0FBOEIsRSxDQUM5QixHQUFHLENBQUMsVUFBSixDQUFlLElBQWYsQ0FBb0IsT0FBcEIsQ0FBNEIsU0FBNUIsQ0FBd0MsRSxDQUN4QyxHQUFHLENBQUMsVUFBSixDQUFlLElBQWYsQ0FBb0IsT0FBcEIsQ0FBNEIsUUFBNUIsQ0FBdUMsRSxDQUN2QyxHQUFHLENBQUMsVUFBSixDQUFlLElBQWYsQ0FBb0IsSUFBcEIsQ0FBMkIsRSxDQUMzQixHQUFHLENBQUMsVUFBSixDQUFlLElBQWYsQ0FBb0IsSUFBcEIsQ0FBeUIsU0FBekIsQ0FBcUMsRSxDQUNyQyxHQUFHLENBQUMsVUFBSixDQUFlLElBQWYsQ0FBb0IsSUFBcEIsQ0FBeUIsUUFBekIsQ0FBb0MsRSxDQUNwQyxHQUFHLENBQUMsVUFBSixDQUFlLElBQWYsQ0FBb0IsSUFBcEIsQ0FBMkIsRSxDQUMzQixHQUFHLENBQUMsVUFBSixDQUFlLElBQWYsQ0FBb0IsSUFBcEIsQ0FBeUIsU0FBekIsQ0FBcUMsRSxDQUNyQyxHQUFHLENBQUMsVUFBSixDQUFlLElBQWYsQ0FBb0IsSUFBcEIsQ0FBeUIsUUFBekIsQ0FBb0MsRSxDQUNwQyxHQUFHLENBQUMsT0FBSixDQUFjLEUsQ0E0RWQsS0FBTSxDQUFBLEdBQUcsQ0FBRyxHQUFJLENBQUEsR0FBaEIiLCJmaWxlIjoib3JnLmFwcC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEFwcGxpY2F0aW9uXG4gKlxuICogQHR5cGUge29yZ31cbiAqL1xuY29uc3Qgb3JnID0gY2xhc3Mge1xufTtcblxub3JnLndlYiA9IGNsYXNzIHtcbn07XG5vcmcuY29tcG91bmQgPSBjbGFzcyB7XG59O1xub3JnLmRhdGEgPSB7fTtcbm9yZy5yZWZlcmVuY2VzID0ge307XG5vcmcucmVmZXJlbmNlcy5mb3JtID0ge307XG5vcmcucmVmZXJlbmNlcy5mb3JtLmluc2VydCA9IHt9O1xub3JnLnJlZmVyZW5jZXMuZm9ybS5nZXQgPSB7fTtcbm9yZy5yZWZlcmVuY2VzLmZvcm0uZ2V0LmNvbXBvbmVudCA9IHt9O1xub3JnLnJlZmVyZW5jZXMuZm9ybS5nZXQudGVtcGxhdGUgPSB7fTtcbm9yZy5yZWZlcmVuY2VzLmZvcm0udXBkYXRlID0ge307XG5vcmcucmVmZXJlbmNlcy5mb3JtLnVwZGF0ZS5jb21wb25lbnQgPSB7fTtcbm9yZy5yZWZlcmVuY2VzLmZvcm0udXBkYXRlLnRlbXBsYXRlID0ge307XG5vcmcucmVmZXJlbmNlcy5mb3JtLnVuc2V0ID0ge307XG5vcmcucmVmZXJlbmNlcy5mb3JtLnVuc2V0LmNvbXBvbmVudCA9IHt9O1xub3JnLnJlZmVyZW5jZXMuZm9ybS51bnNldC50ZW1wbGF0ZSA9IHt9O1xub3JnLnJlZmVyZW5jZXMuZm9ybS5zZXQgPSB7fTtcbm9yZy5yZWZlcmVuY2VzLmZvcm0uc2V0LmNvbXBvbmVudCA9IHt9O1xub3JnLnJlZmVyZW5jZXMuZm9ybS5zZXQudGVtcGxhdGUgPSB7fTtcbm9yZy5yZWZlcmVuY2VzLmZvcm0udXBncmFkZSA9IHt9O1xub3JnLnJlZmVyZW5jZXMuZm9ybS51cGdyYWRlLmNvbXBvbmVudCA9IHt9O1xub3JnLnJlZmVyZW5jZXMuZm9ybS51cGdyYWRlLnRlbXBsYXRlID0ge307XG5vcmcucmVmZXJlbmNlcy5mb3JtLnNvcnQgPSB7fTtcbm9yZy5yZWZlcmVuY2VzLmZvcm0uc29ydC5jb21wb25lbnQgPSB7fTtcbm9yZy5yZWZlcmVuY2VzLmZvcm0uc29ydC50ZW1wbGF0ZSA9IHt9O1xub3JnLnJlZmVyZW5jZXMuZm9ybS5pbml0ID0ge307XG5vcmcucmVmZXJlbmNlcy5mb3JtLmluaXQuY29tcG9uZW50ID0ge307XG5vcmcucmVmZXJlbmNlcy5mb3JtLmluaXQudGVtcGxhdGUgPSB7fTtcbm9yZy5vYmplY3RzID0ge307XG5cbi8qKlxuICogVXRpbGl0eSB0byBzZW5kIGRhdGEgdG8gdGhlIHNlcnZlciB2aWEgQVhJT1NcbiAqXG4gKiBAcGFyYW0gbWV0aG9kXG4gKiBAcGFyYW0gcHJvcHNcbiAqIEBwYXJhbSBIVFRQXG4gKiBAcmV0dXJucyB7Kn1cbiAqL1xuLy8gb3JnLndlYi5yZXF1ZXN0ID0gZnVuY3Rpb24gKG1ldGhvZCwgcHJvcHMsIEhUVFAgPSB7fSkge1xuLy8gICAgIHJldHVybiBheGlvcyh7XG4vLyAgICAgICAgIG1ldGhvZDogSFRUUC5tZXRob2QgfHwgJ3Bvc3QnLFxuLy8gICAgICAgICB1cmw6IE1JUkVMRS51cmxzLmFqYXgsXG4vLyAgICAgICAgIGhlYWRlcnM6IHtcbi8vICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJ1xuLy8gICAgICAgICB9LFxuLy8gICAgICAgICBkYXRhOiBRcy5zdHJpbmdpZnkoT2JqZWN0LmFzc2lnbihwcm9wcywge1xuLy8gICAgICAgICAgICAgJ2FjdGlvbic6ICdtaXJlbGVfZW5kcG9pbnRfdjEnLFxuLy8gICAgICAgICAgICAgJ21ldGhvZCc6IG1ldGhvZFxuLy8gICAgICAgICB9KSlcbi8vICAgICB9KTtcbi8vIH1cblxuLyoqXG4gKiBVdGlsaXR5IGZvciBjcmVhdGluZyBhbiBpbnRlcmZhY2VcbiAqL1xuLy8gb3JnLmludGVyZmFjZSA9IGNsYXNzIHtcbi8vXG4vLyAgICAgY29uc3RydWN0b3IoZGF0YSA9IHt9KSB7XG4vLyAgICAgICAgIGlmICgncmVxdWlyZXMnIGluIGRhdGEpIHtcbi8vICAgICAgICAgICAgIGlmICgndnVlJyBpbiBkYXRhLnJlcXVpcmVzICYmIGRhdGEucmVxdWlyZXMudnVlID09PSB0cnVlKSB7XG4vLyAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBWdWUgIT09ICdmdW5jdGlvbicpIHtcbi8vICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuLy8gICAgICAgICAgICAgICAgIH1cbi8vICAgICAgICAgICAgIH1cbi8vICAgICAgICAgICAgIGlmICgnanF1ZXJ5JyBpbiBkYXRhLnJlcXVpcmVzICYmIGRhdGEucmVxdWlyZXMudnVlID09PSB0cnVlKSB7XG4vLyAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBqUXVlcnkgIT09ICdmdW5jdGlvbicpIHtcbi8vICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuLy8gICAgICAgICAgICAgICAgIH1cbi8vICAgICAgICAgICAgIH1cbi8vXG4vLyAgICAgICAgIH1cbi8vICAgICAgICAgalF1ZXJ5KGRvY3VtZW50KS5yZWFkeShpbml0ID0+IHtcbi8vICAgICAgICAgICAgIGlmICgncmVhZHknIGluIGRhdGEpIHtcbi8vICAgICAgICAgICAgICAgICB0aGlzLnJlYWR5ID0gZGF0YS5yZWFkeShpbml0LCBqUXVlcnkpO1xuLy8gICAgICAgICAgICAgfVxuLy8gICAgICAgICAgICAgaWYgKCd2dWUnIGluIGRhdGEpIHtcbi8vICAgICAgICAgICAgICAgICBpZiAoJ2VsZW1lbnRzJyBpbiBkYXRhICYmIGRhdGEuZWxlbWVudHMudnVlKSB7XG4vLyAgICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgW2FyZ3VtZW50LCBlbGVtZW50XSBvZiBPYmplY3QuZW50cmllcyhkYXRhLmVsZW1lbnRzLnZ1ZSkpIHtcbi8vICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghalF1ZXJ5KGVsZW1lbnQpLmxlbmd0aCkge1xuLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbi8vICAgICAgICAgICAgICAgICAgICAgICAgIH1cbi8vICAgICAgICAgICAgICAgICAgICAgfVxuLy8gICAgICAgICAgICAgICAgIH1cbi8vICAgICAgICAgICAgICAgICBpZiAoJ3Z1ZScgaW4gZGF0YSkge1xuLy8gICAgICAgICAgICAgICAgICAgICB0aGlzLnZ1ZSA9IG5ldyBWdWUoZGF0YS52dWUpO1xuLy8gICAgICAgICAgICAgICAgIH1cbi8vXG4vLyAgICAgICAgICAgICB9XG4vLyAgICAgICAgICAgICBpZiAoJ21vdW50ZWQnIGluIGRhdGEpIHtcbi8vICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFtlbGVtZW50LCBhcmd1bWVudF0gb2YgT2JqZWN0LmVudHJpZXMoZGF0YS5tb3VudGVkKSkge1xuLy8gICAgICAgICAgICAgICAgICAgICBpZiAoalF1ZXJ5KGVsZW1lbnQpLmxlbmd0aCkge1xuLy8gICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5tb3VudGVkID0gYXJndW1lbnQoaW5pdCwgJCwgZGF0YS5pbnN0YW5jZXMpO1xuLy8gICAgICAgICAgICAgICAgICAgICB9XG4vLyAgICAgICAgICAgICAgICAgfVxuLy8gICAgICAgICAgICAgfVxuLy8gICAgICAgICB9KTtcbi8vICAgICB9XG4vLyB9XG5cbi8qKlxuICogSW5pdGlhbGl6YXRpb24gb2YgdGhlIGFwcGxpY2F0aW9uXG4gKlxuICogQHR5cGUge29yZ31cbiAqL1xuY29uc3QgYXBwID0gbmV3IG9yZztcbiJdfQ==