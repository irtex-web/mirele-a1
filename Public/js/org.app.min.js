const org=class{constructor(){this.data={},this.references={},this.references.form={},this.references.form.insert={},this.references.form.get={},this.references.form.get.component={},this.references.form.get.template={},this.references.form.update={},this.references.form.update.component={},this.references.form.update.template={},this.references.form.unset={},this.references.form.unset.component={},this.references.form.unset.template={},this.references.form.set={},this.references.form.set.component={},this.references.form.set.template={},this.references.form.upgrade={},this.references.form.upgrade.component={},this.references.form.upgrade.template={},this.references.form.sort={},this.references.form.sort.component={},this.references.form.sort.template={},this.references.form.init={},this.references.form.init.component={},this.references.form.init.template={},this.objects={},this.server=MIRELE||{}}};org.prototype.request=function(a,b,c={}){return axios({method:c.method||"post",url:MIRELE.urls.ajax,headers:{"Content-Type":"application/x-www-form-urlencoded"},data:Qs.stringify(Object.assign(b,{action:"mirele_endpoint_v1",method:a}))})},org.prototype.interface=class{constructor(a={}){if("requires"in a){if("vue"in a.requires&&!0===a.requires.vue&&"function"!=typeof Vue)return;if("jquery"in a.requires&&!0===a.requires.vue&&"function"!=typeof jQuery)return}jQuery(document).ready(b=>{if("ready"in a&&(this.ready=a.ready(b,jQuery)),"vue"in a){if("elements"in a&&a.elements.vue)for(const[b,c]of Object.entries(a.elements.vue))if(!jQuery(c).length)return;"vue"in a&&(this.vue=new Vue(a.vue))}if("mounted"in a)for(const[c,d]of Object.entries(a.mounted))jQuery(c).length&&(this.mounted=d(b,$,a.instances))})}};const app=new org;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,