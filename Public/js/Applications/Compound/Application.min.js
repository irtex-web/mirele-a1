"use strict";Application&&(Application.Modules.Compound=new Application.Interface({requires:{vue:!0,jquery:!0},elements:{vue:["#compound__editor__frame"]},vue:{delimiters:Application.Config.VUE.Delimiters,el:"#compound__editor__frame",data:{store:{components:[],templates:[]},document:!1,style:!1,selected:[],bufferCopyPaste:[],thereCriticalError:!1},mounted:function(a=null){jQuery(".__compound_hide_before_mounted").removeClass("__compound_hide_before_mounted");const b=this;this.update().then(()=>{jQuery(".__compound_editor_document").selectable({filter:".__compound_editor_container",stop:function(){b.selected=[],jQuery(".ui-selected",this).each(function(){b.selected.push(jQuery(this).attr("data-compound-path"))})}}),jQuery("#compound_layout").sortable({axis:"xy",containment:"document",disabled:!0,tolerance:"pointer",placeholder:"__compound_placeholder",helper:"clone",opacity:.5,cursor:"move",forcePlaceholderSize:!0,revert:20,delay:0,start:(a,b)=>{b.placeholder.height(b.item.height())},stop:()=>{jQuery("#compound_layout").sortable("option","disabled",!0)},update:()=>{var a=[];jQuery("#compound_layout").find(".__compound_editor_index").each(function(){a.push(jQuery(this).attr("data-compound-path"))}),b.updateOrder(a)}}),jQuery(document).keydown(function(a){[]!=b.selected&&null!=b.selected&&b.selected&&(a.ctrlKey&&86==a.keyCode?(a.preventDefault(),b.dublicate(b.bufferCopyPaste)):a.ctrlKey&&67==a.keyCode?(a.preventDefault(),b.bufferCopyPaste=b.selected):a.ctrlKey&&46==a.keyCode&&(a.preventDefault(),b.remove(b.selected))),a.ctrlKey&&82==a.keyCode&&(a.preventDefault(),b.update())})}).catch(()=>{}),new Application.Postman({method:"CompoundPrivate/store",body:{type:"COMPONENTS"}}).then(a=>{this.store.components=a.data}).catch(()=>{}),new Application.Postman({method:"CompoundPrivate/store",body:{type:"TEMPLATES"}}).then(a=>{this.store.templates=a.data}).catch(()=>{})},methods:{__editor:function(a,b){try{return this.store.templates[a].editor[b]}catch(a){return{}}},__about:function(a){return"undefined"!=typeof this.store.components[a.component]&&"undefined"!=typeof this.store.components[a.component].about?this.store.components[a.component].about:{title:"Undefined",description:"Undefined",icon:!1}},__getMarkup:function(){return new Application.Postman({method:"CompoundPrivate/markup",body:{id:Application.Constants.WordPress.ID}})},error:function(a){this.thereCriticalError={901:{title:"Template code is broken",description:"Your template code is corrupted. Most likely because you made a mistake when manually editing the document.<br>Please revert the document to an earlier version or recreate the page"}}[a]},update:function(){this;return jQuery(".__compound_editor_area").addClass("__compound_almost_inaccessible"),this.__getMarkup().then(a=>(500==a.status&&this.error(901),a.data.document?(jQuery(".ui-selected").removeClass("ui-selected"),this.document=Object.freeze(a.data.document),this.style=Object.freeze(a.data.style),!0):this.document=!1)).catch(()=>{}).finally(()=>{jQuery(".__compound_editor_area").removeClass("__compound_almost_inaccessible")})},editComponent:function(a){const b=Application.Modules.CompoundModal.vue,c=Application.Components.Compound.EditComponent;console.log(a.target.attributes),b.mount(c),b.open({PageID:Application.Constants.WordPress.ID,Area:a.target.attributes["data-compound-area"].value,Template:a.target.attributes["data-compound-template"].value,Index:a.target.attributes["data-compound-index"].value,Component:a.target.attributes["data-compound-component"].value,Document:this.document})},insertTemplate:function(){const a=Application.Modules.CompoundModal.vue,b=Application.Components.Compound.InsertTemplate;a.mount(b),a.open({PageID:Application.Constants.WordPress.ID,templates:this.store.templates})},insertComponent:function(a){const b=Application.Modules.CompoundModal.vue,c=Application.Components.Compound.InsertComponent;b.mount(c),b.open({PageID:Application.Constants.WordPress.ID,path:a.target.attributes["data-compound-path"].value,components:this.store.components})},dublicate:function(a){new Application.Postman({method:"CompoundPrivate/template",body:{PageID:Application.Constants.WordPress.ID,type:"DUBLICATE",DUBLICATE:a||this.selected}}).then(()=>{this.update()}).catch(()=>{this.update()})},remove:function(a){new Application.Postman({method:"CompoundPrivate/template",body:{PageID:Application.Constants.WordPress.ID,type:"DELETE",DELETE:a||this.selected}}).then(()=>{this.update()}).catch(()=>{this.update()})},updateOrder:function(a){new Application.Postman({method:"CompoundPrivate/template",body:{PageID:Application.Constants.WordPress.ID,type:"ORDER",ORDER:a||[]}}).finally(()=>{this.update()})},_mouseoverTemplateTools:function(a){const b=jQuery(a.target).closest(".__compound_editor_template").find("[data-selected]");b.attr("data-selected","true"),jQuery("#compound_layout").sortable("option","disabled",!1)},_mouseleaveTemplateTools:function(a){const b=jQuery(a.target).closest(".__compound_editor_template").find("[data-selected]");b.attr("data-selected","false"),jQuery("#compound_layout").sortable("option","disabled",!0)}}},ready:function(){}}));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,