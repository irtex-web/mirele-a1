const Application={Config:{VUE:{Delimiters:["{","}"]}},Constants:{Service:window.x33707||{},WordPress:window.x27511||{},Woocommerce:window.x70460||{}},Temporary:{},Variables:{},Components:{Compound:{}},Modules:{},Declare:class{constructor(a){lodash.set(Application,a,{})}},Interface:class{constructor(a={}){if("requires"in a){if("vue"in a.requires&&!0===a.requires.vue&&"function"!=typeof Vue)return;if("jquery"in a.requires&&!0===a.requires.vue&&"function"!=typeof jQuery)return}jQuery(document).ready(b=>{if("ready"in a&&(this.ready=a.ready(b,jQuery)),"vue"in a){if("elements"in a&&a.elements.vue)for(const[b,c]of Object.entries(a.elements.vue))if(!jQuery(c).length)return;"vue"in a&&(this.vue=new Vue(a.vue))}if("mounted"in a)for(const[c,d]of Object.entries(a.mounted))jQuery(c).length&&(this.mounted=d(b,$,a.instances))})}},Request:class{constructor(a={}){"url"in a&&(this.url=a.url),"method"in a&&(this.method=a.method),"headers"in a&&(this.headers=a.headers),"body"in a&&(this.body=a.body),"Postman"in a&&(this.Postman=a.Postman)}run(){return axios({method:this.method||"post",url:this.url||Application.Constants.Service.AXIOS.URL,headers:this.headers||{"Content-Type":"application/x-www-form-urlencoded"},data:Qs.stringify(this.body||Object.assign({action:"mirele_endpoint_v1",method:this.Postman.Method||""}))})}},Postman:class{constructor(a={}){return axios({validateStatus:()=>!0,method:(a.HTTP||{}).method||"post",url:(a.HTTP||{}).url||Application.Constants.Service.AXIOS.URL,headers:(a.HTTP||{}).headers||{"Content-Type":"application/x-www-form-urlencoded"},data:Qs.stringify(Object.assign(a.body||{},{action:"mirele_endpoint_v1",method:a.method}))})}},Midway:class{}};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,