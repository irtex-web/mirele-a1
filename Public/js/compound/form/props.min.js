app.references.form.get.component.props=new app.interface({requires:{vue:!0,jquery:!0},elements:{vue:["#modal_edit_props"]},vue:{delimiters:["{","}"],el:"#modal_edit_props",data:{__editor:CompoundEditor.vue||Object,meta:{},fields:[],component:[],props:[],type:"update"},mounted:()=>{},methods:{open:function(a){this.fields=[],this.meta={},this.event=a,app.request("Compound/getProps",a).then(a=>{if(200==a.status){if("object"==typeof a.data.props&&0<Object.keys(a.data.props).length)for(const[b,c]of Object.entries(a.data.props))this.fields.push({name:b,value:c}),this.props[b]=c;"object"==typeof a.data.meta&&(this.meta=a.data.meta),tb_show("Edit props of component",`/?TB_inline&inlineId=modal_edit_props&width=${CONFIG.modal.width||600}&height=${CONFIG.modal.height||700}`)}else this.__editor.vue.ui.notify.notify(this,{text:"Request to server failed",type:"danger"})})},submit:function(){const a=app.request("Compound/updateProps",Object.assign(this.event,{type:this.type},{props:this.props||[]}));a.then(()=>{this.__editor.updateMarkup().then(()=>{tb_remove()})})}}},ready:function(){}});

//# sourceMappingURL=data:application/json;charset=utf-8;base64,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UyxDQUN2QyxTQUFTLEVBQ1osQ0FGRCxDQUdILENBSkQsQ0FNSCxDQTNESSxDQWJSLENBUm1ELENBb0Z4RCxLQUFLLENBQUUsVUFBb0IsQ0FFMUIsQ0F0RnVELENBQWxCLEMiLCJmaWxlIjoicHJvcHMubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiYXBwLnJlZmVyZW5jZXMuZm9ybS5nZXQuY29tcG9uZW50LnByb3BzID0gbmV3IGFwcC5pbnRlcmZhY2Uoe1xuICAgIHJlcXVpcmVzOiB7XG4gICAgICAgIHZ1ZTogdHJ1ZSxcbiAgICAgICAganF1ZXJ5OiB0cnVlXG4gICAgfSxcbiAgICBlbGVtZW50czoge1xuICAgICAgICB2dWU6IFsnI21vZGFsX2VkaXRfcHJvcHMnXVxuICAgIH0sXG4gICAgdnVlOiB7XG4gICAgICAgIGRlbGltaXRlcnM6IFsneycsICd9J10sXG4gICAgICAgIGVsOiBcIiNtb2RhbF9lZGl0X3Byb3BzXCIsXG4gICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIF9fZWRpdG9yOiBDb21wb3VuZEVkaXRvci52dWUgfHwgT2JqZWN0LFxuICAgICAgICAgICAgbWV0YToge30sXG4gICAgICAgICAgICBmaWVsZHM6IFtdLFxuICAgICAgICAgICAgY29tcG9uZW50OiBbXSxcbiAgICAgICAgICAgIHByb3BzOiBbXSxcbiAgICAgICAgICAgIHR5cGU6ICd1cGRhdGUnXG4gICAgICAgIH0sXG4gICAgICAgIG1vdW50ZWQ6IEV2ZW50ID0+IHtcbiAgICAgICAgfSxcbiAgICAgICAgbWV0aG9kczoge1xuICAgICAgICAgICAgb3BlbjogZnVuY3Rpb24gKGV2ZW50KSB7XG5cbiAgICAgICAgICAgICAgICB0aGlzLmZpZWxkcyA9IFtdO1xuICAgICAgICAgICAgICAgIHRoaXMubWV0YSA9IHt9O1xuICAgICAgICAgICAgICAgIHRoaXMuZXZlbnQgPSBldmVudDtcblxuICAgICAgICAgICAgICAgIC8vIENyZWF0ZSByZXF1ZXN0XG4gICAgICAgICAgICAgICAgKGFwcC5yZXF1ZXN0KCdDb21wb3VuZC9nZXRQcm9wcycsIGV2ZW50KSkudGhlbihFdmVudCA9PiB7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKEV2ZW50LnN0YXR1cyA9PSAyMDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgRXZlbnQuZGF0YS5wcm9wcyA9PSAnb2JqZWN0JyAmJiBPYmplY3Qua2V5cyhFdmVudC5kYXRhLnByb3BzKS5sZW5ndGggPiAwKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFtuYW1lLCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMoRXZlbnQuZGF0YS5wcm9wcykpIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmZpZWxkcy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IG5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdmFsdWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9wc1tuYW1lXSA9IHZhbHVlO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgRXZlbnQuZGF0YS5tZXRhID09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5tZXRhID0gRXZlbnQuZGF0YS5tZXRhO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICB0Yl9zaG93KCdFZGl0IHByb3BzIG9mIGNvbXBvbmVudCcsIGAvP1RCX2lubGluZSZpbmxpbmVJZD1tb2RhbF9lZGl0X3Byb3BzJndpZHRoPSR7Q09ORklHLm1vZGFsLndpZHRoIHx8IDYwMH0maGVpZ2h0PSR7Q09ORklHLm1vZGFsLmhlaWdodCB8fCA3MDB9YCk7XG5cbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fX2VkaXRvci52dWUudWkubm90aWZ5Lm5vdGlmeSh0aGlzLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogJ1JlcXVlc3QgdG8gc2VydmVyIGZhaWxlZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2RhbmdlcidcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICBzdWJtaXQ6IGZ1bmN0aW9uIChldmVudCkge1xuXG4gICAgICAgICAgICAgICAgY29uc3QgUmVxdWVzdCA9IGFwcC5yZXF1ZXN0KCdDb21wb3VuZC91cGRhdGVQcm9wcycsIE9iamVjdC5hc3NpZ24odGhpcy5ldmVudCwge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiB0aGlzLnR5cGVcbiAgICAgICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgIHByb3BzOiB0aGlzLnByb3BzIHx8IFtdXG4gICAgICAgICAgICAgICAgfSkpO1xuXG4gICAgICAgICAgICAgICAgUmVxdWVzdC50aGVuKEV2ZW50ID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fX2VkaXRvci51cGRhdGVNYXJrdXAoKS50aGVuKEV2ZW50ID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRiX3JlbW92ZSgpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgfSxcblxuICAgICAgICB9XG4gICAgfSxcbiAgICByZWFkeTogZnVuY3Rpb24gKEV2ZW50LCAkKSB7XG5cbiAgICB9XG59KSJdfQ==