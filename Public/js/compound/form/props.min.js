Project.export("@form-props",new Interface({requires:{vue:!0,jquery:!0},elements:{vue:["#modal_edit_props"]},vue:{delimiters:["{","}"],el:"#modal_edit_props",data:{__editor:CompoundEditor.vue||Object,meta:{},fields:[],component:[],props:[],type:"update"},mounted:()=>{},methods:{open:function(a){this.fields=[],this.meta={},this.event=a,new WPAjax("Compound-getProps",a).then(a=>{if(!0===a.data.success){if("object"==typeof a.data.data.props&&0<Object.keys(a.data.data.props).length)for(const[b,c]of Object.entries(a.data.data.props))this.fields.push({name:b,value:c}),this.props[b]=c;"object"==typeof a.data.data.meta&&(this.meta=a.data.data.meta),tb_show("Edit props of component",`/?TB_inline&inlineId=modal_edit_props&width=${CONFIG.modal.width||600}&height=${CONFIG.modal.height||700}`)}})},submit:function(){const a=new WPAjax("Compound-updateProps",Object.assign(this.event,{type:this.type},{props:this.props}));a.then(()=>{this.__editor.updateMarkup().then(()=>{tb_remove()})})}}},ready:function(){}}));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,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bnRlbnQiOlsiUHJvamVjdC5leHBvcnQoJ0Bmb3JtLXByb3BzJywgbmV3IEludGVyZmFjZSh7XG4gICAgcmVxdWlyZXM6IHtcbiAgICAgICAgdnVlOiB0cnVlLFxuICAgICAgICBqcXVlcnk6IHRydWVcbiAgICB9LFxuICAgIGVsZW1lbnRzOiB7XG4gICAgICAgIHZ1ZTogWycjbW9kYWxfZWRpdF9wcm9wcyddXG4gICAgfSxcbiAgICB2dWU6IHtcbiAgICAgICAgZGVsaW1pdGVyczogWyd7JywgJ30nXSxcbiAgICAgICAgZWw6IFwiI21vZGFsX2VkaXRfcHJvcHNcIixcbiAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgX19lZGl0b3I6IENvbXBvdW5kRWRpdG9yLnZ1ZSB8fCBPYmplY3QsXG4gICAgICAgICAgICBtZXRhOiB7fSxcbiAgICAgICAgICAgIGZpZWxkczogW10sXG4gICAgICAgICAgICBjb21wb25lbnQ6IFtdLFxuICAgICAgICAgICAgcHJvcHM6IFtdLFxuICAgICAgICAgICAgdHlwZTogJ3VwZGF0ZSdcbiAgICAgICAgfSxcbiAgICAgICAgbW91bnRlZDogRXZlbnQgPT4ge1xuICAgICAgICB9LFxuICAgICAgICBtZXRob2RzOiB7XG4gICAgICAgICAgICBvcGVuOiBmdW5jdGlvbiAoZXZlbnQpIHtcblxuICAgICAgICAgICAgICAgIHRoaXMuZmllbGRzID0gW107XG4gICAgICAgICAgICAgICAgdGhpcy5tZXRhID0ge307XG4gICAgICAgICAgICAgICAgdGhpcy5ldmVudCA9IGV2ZW50O1xuXG4gICAgICAgICAgICAgICAgLy8gQ3JlYXRlIHJlcXVlc3RcbiAgICAgICAgICAgICAgICAobmV3IFdQQWpheCgnQ29tcG91bmQtZ2V0UHJvcHMnLCBldmVudCkpLnRoZW4oRXZlbnQgPT4ge1xuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgaWYgKEV2ZW50LmRhdGEuc3VjY2VzcyA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBFdmVudC5kYXRhLmRhdGEucHJvcHMgPT0gJ29iamVjdCcgJiYgT2JqZWN0LmtleXMoRXZlbnQuZGF0YS5kYXRhLnByb3BzKS5sZW5ndGggPiAwKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFtuYW1lLCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMoRXZlbnQuZGF0YS5kYXRhLnByb3BzKSkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZmllbGRzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogbmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiB2YWx1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnByb3BzW25hbWVdID0gdmFsdWU7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBFdmVudC5kYXRhLmRhdGEubWV0YSA9PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubWV0YSA9IEV2ZW50LmRhdGEuZGF0YS5tZXRhO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICB0Yl9zaG93KCdFZGl0IHByb3BzIG9mIGNvbXBvbmVudCcsIGAvP1RCX2lubGluZSZpbmxpbmVJZD1tb2RhbF9lZGl0X3Byb3BzJndpZHRoPSR7Q09ORklHLm1vZGFsLndpZHRofHw2MDB9JmhlaWdodD0ke0NPTkZJRy5tb2RhbC5oZWlnaHR8fDcwMH1gKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgc3VibWl0OiBmdW5jdGlvbiAoZXZlbnQpIHtcblxuICAgICAgICAgICAgICAgIGNvbnN0IFJlcXVlc3QgPSBuZXcgV1BBamF4KCdDb21wb3VuZC11cGRhdGVQcm9wcycsIE9iamVjdC5hc3NpZ24odGhpcy5ldmVudCwge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiB0aGlzLnR5cGVcbiAgICAgICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgIHByb3BzOiB0aGlzLnByb3BzXG4gICAgICAgICAgICAgICAgfSkpO1xuXG4gICAgICAgICAgICAgICAgUmVxdWVzdC50aGVuKEV2ZW50ID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fX2VkaXRvci51cGRhdGVNYXJrdXAoKS50aGVuKEV2ZW50ID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRiX3JlbW92ZSgpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgfSxcblxuICAgICAgICB9XG4gICAgfSxcbiAgICByZWFkeTogZnVuY3Rpb24gKEV2ZW50LCAkKSB7XG5cbiAgICB9XG59KSk7Il19