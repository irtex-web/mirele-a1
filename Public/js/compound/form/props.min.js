Project.export("@form-props",new Interface({requires:{vue:!0,jquery:!0},elements:{vue:["#modal_edit_props"]},vue:{delimiters:["{","}"],el:"#modal_edit_props",data:{__editor:CompoundEditor.vue||Object,meta:{},fields:[],component:[],props:[],type:"update"},mounted:()=>{},methods:{open:function(a){this.fields=[],this.meta={},this.event=a,new AIK().postman("Compound-getProps",a).then(a=>{if(!0===a.data.success){if("object"==typeof a.data.data.props&&0<Object.keys(a.data.data.props).length)for(const[b,c]of Object.entries(a.data.data.props))this.fields.push({name:b,value:c}),this.props[b]=c;"object"==typeof a.data.data.meta&&(this.meta=a.data.data.meta),tb_show("Edit props of component",`/?TB_inline&inlineId=modal_edit_props&width=${CONFIG.modal.width||600}&height=${CONFIG.modal.height||700}`)}})},submit:function(){const a=new AIK().postman("Compound-updateProps",Object.assign(this.event,{type:this.type},{props:this.props||[]}));a.then(()=>{this.__editor.updateMarkup().then(()=>{tb_remove()})})}}},ready:function(){}}));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFkLENBQTlCLEMiLCJmaWxlIjoicHJvcHMubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiUHJvamVjdC5leHBvcnQoJ0Bmb3JtLXByb3BzJywgbmV3IEludGVyZmFjZSh7XG4gICAgcmVxdWlyZXM6IHtcbiAgICAgICAgdnVlOiB0cnVlLFxuICAgICAgICBqcXVlcnk6IHRydWVcbiAgICB9LFxuICAgIGVsZW1lbnRzOiB7XG4gICAgICAgIHZ1ZTogWycjbW9kYWxfZWRpdF9wcm9wcyddXG4gICAgfSxcbiAgICB2dWU6IHtcbiAgICAgICAgZGVsaW1pdGVyczogWyd7JywgJ30nXSxcbiAgICAgICAgZWw6IFwiI21vZGFsX2VkaXRfcHJvcHNcIixcbiAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgX19lZGl0b3I6IENvbXBvdW5kRWRpdG9yLnZ1ZSB8fCBPYmplY3QsXG4gICAgICAgICAgICBtZXRhOiB7fSxcbiAgICAgICAgICAgIGZpZWxkczogW10sXG4gICAgICAgICAgICBjb21wb25lbnQ6IFtdLFxuICAgICAgICAgICAgcHJvcHM6IFtdLFxuICAgICAgICAgICAgdHlwZTogJ3VwZGF0ZSdcbiAgICAgICAgfSxcbiAgICAgICAgbW91bnRlZDogRXZlbnQgPT4ge1xuICAgICAgICB9LFxuICAgICAgICBtZXRob2RzOiB7XG4gICAgICAgICAgICBvcGVuOiBmdW5jdGlvbiAoZXZlbnQpIHtcblxuICAgICAgICAgICAgICAgIHRoaXMuZmllbGRzID0gW107XG4gICAgICAgICAgICAgICAgdGhpcy5tZXRhID0ge307XG4gICAgICAgICAgICAgICAgdGhpcy5ldmVudCA9IGV2ZW50O1xuXG4gICAgICAgICAgICAgICAgLy8gQ3JlYXRlIHJlcXVlc3RcbiAgICAgICAgICAgICAgICAoKG5ldyBBSUspLnBvc3RtYW4oJ0NvbXBvdW5kLWdldFByb3BzJywgZXZlbnQpKS50aGVuKEV2ZW50ID0+IHtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIGlmIChFdmVudC5kYXRhLnN1Y2Nlc3MgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgRXZlbnQuZGF0YS5kYXRhLnByb3BzID09ICdvYmplY3QnICYmIE9iamVjdC5rZXlzKEV2ZW50LmRhdGEuZGF0YS5wcm9wcykubGVuZ3RoID4gMCkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBbbmFtZSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKEV2ZW50LmRhdGEuZGF0YS5wcm9wcykpIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmZpZWxkcy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IG5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdmFsdWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9wc1tuYW1lXSA9IHZhbHVlO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgRXZlbnQuZGF0YS5kYXRhLm1ldGEgPT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1ldGEgPSBFdmVudC5kYXRhLmRhdGEubWV0YTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgdGJfc2hvdygnRWRpdCBwcm9wcyBvZiBjb21wb25lbnQnLCBgLz9UQl9pbmxpbmUmaW5saW5lSWQ9bW9kYWxfZWRpdF9wcm9wcyZ3aWR0aD0ke0NPTkZJRy5tb2RhbC53aWR0aHx8NjAwfSZoZWlnaHQ9JHtDT05GSUcubW9kYWwuaGVpZ2h0fHw3MDB9YCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIHN1Ym1pdDogZnVuY3Rpb24gKGV2ZW50KSB7XG5cbiAgICAgICAgICAgICAgICBjb25zdCBSZXF1ZXN0ID0gKG5ldyBBSUspLnBvc3RtYW4oJ0NvbXBvdW5kLXVwZGF0ZVByb3BzJywgT2JqZWN0LmFzc2lnbih0aGlzLmV2ZW50LCB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IHRoaXMudHlwZVxuICAgICAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgcHJvcHM6IHRoaXMucHJvcHMgfHwgW11cbiAgICAgICAgICAgICAgICB9KSk7XG5cbiAgICAgICAgICAgICAgICBSZXF1ZXN0LnRoZW4oRXZlbnQgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9fZWRpdG9yLnVwZGF0ZU1hcmt1cCgpLnRoZW4oRXZlbnQgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGJfcmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICB9LFxuXG4gICAgICAgIH1cbiAgICB9LFxuICAgIHJlYWR5OiBmdW5jdGlvbiAoRXZlbnQsICQpIHtcblxuICAgIH1cbn0pKTsiXX0=