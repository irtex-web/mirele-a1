app.references.form.get.template.props=new app.interface({requires:{vue:!0,jquery:!0},elements:{vue:["#modal_edit_props_template"]},vue:{delimiters:["{","}"],el:"#modal_edit_props_template",data:{__editor:CompoundEditor.vue||Object,meta:{},fields:[],props:[],type:"update"},mounted:()=>{},methods:{open:function(a){this.fields=[],this.meta={},this.event=a,app.request("Compound/getTemplateProps",a).then(a=>{if(200==a.status){if("object"==typeof a.data.props&&0<Object.keys(a.data.props).length)for(const[b,c]of Object.entries(a.data.props))this.fields.push({name:b,value:c}),this.props[b]=c;tb_show("Edit props of template",`/?TB_inline&inlineId=modal_edit_props_template&width=${CONFIG.modal.width||600}&height=${CONFIG.modal.height||700}`)}else this.__editor.vue.ui.notify.notify(this,{text:"Request to server failed",type:"danger"})})},submit:function(){const a=app.request("Compound/updateTemplateProps",Object.assign(this.event,{props:this.props||[]}));a.then(()=>{this.__editor.updateMarkup().then(()=>{tb_remove()})})}}},ready:function(){}});

//# sourceMappingURL=data:application/json;charset=utf-8;base64,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cHAucmVmZXJlbmNlcy5mb3JtLmdldC50ZW1wbGF0ZS5wcm9wcyA9IG5ldyBhcHAuaW50ZXJmYWNlKHtcbiAgICByZXF1aXJlczoge1xuICAgICAgICB2dWU6IHRydWUsXG4gICAgICAgIGpxdWVyeTogdHJ1ZVxuICAgIH0sXG4gICAgZWxlbWVudHM6IHtcbiAgICAgICAgdnVlOiBbJyNtb2RhbF9lZGl0X3Byb3BzX3RlbXBsYXRlJ11cbiAgICB9LFxuICAgIHZ1ZToge1xuICAgICAgICBkZWxpbWl0ZXJzOiBbJ3snLCAnfSddLFxuICAgICAgICBlbDogXCIjbW9kYWxfZWRpdF9wcm9wc190ZW1wbGF0ZVwiLFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBfX2VkaXRvcjogQ29tcG91bmRFZGl0b3IudnVlIHx8IE9iamVjdCxcbiAgICAgICAgICAgIG1ldGE6IHt9LFxuICAgICAgICAgICAgZmllbGRzOiBbXSxcbiAgICAgICAgICAgIHByb3BzOiBbXSxcbiAgICAgICAgICAgIHR5cGU6ICd1cGRhdGUnXG4gICAgICAgIH0sXG4gICAgICAgIG1vdW50ZWQ6IEV2ZW50ID0+IHtcbiAgICAgICAgfSxcbiAgICAgICAgbWV0aG9kczoge1xuICAgICAgICAgICAgb3BlbjogZnVuY3Rpb24gKGV2ZW50KSB7XG5cbiAgICAgICAgICAgICAgICB0aGlzLmZpZWxkcyA9IFtdO1xuICAgICAgICAgICAgICAgIHRoaXMubWV0YSA9IHt9O1xuICAgICAgICAgICAgICAgIHRoaXMuZXZlbnQgPSBldmVudDtcblxuICAgICAgICAgICAgICAgIC8vIENyZWF0ZSByZXF1ZXN0XG4gICAgICAgICAgICAgICAgKGFwcC5yZXF1ZXN0KCdDb21wb3VuZC9nZXRUZW1wbGF0ZVByb3BzJywgZXZlbnQpKS50aGVuKEV2ZW50ID0+IHtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoRXZlbnQuc3RhdHVzID09IDIwMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBFdmVudC5kYXRhLnByb3BzID09ICdvYmplY3QnICYmIE9iamVjdC5rZXlzKEV2ZW50LmRhdGEucHJvcHMpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFtuYW1lLCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMoRXZlbnQuZGF0YS5wcm9wcykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5maWVsZHMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBuYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnByb3BzW25hbWVdID0gdmFsdWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICB0Yl9zaG93KCdFZGl0IHByb3BzIG9mIHRlbXBsYXRlJywgYC8/VEJfaW5saW5lJmlubGluZUlkPW1vZGFsX2VkaXRfcHJvcHNfdGVtcGxhdGUmd2lkdGg9JHtDT05GSUcubW9kYWwud2lkdGggfHwgNjAwfSZoZWlnaHQ9JHtDT05GSUcubW9kYWwuaGVpZ2h0IHx8IDcwMH1gKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fX2VkaXRvci52dWUudWkubm90aWZ5Lm5vdGlmeSh0aGlzLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogJ1JlcXVlc3QgdG8gc2VydmVyIGZhaWxlZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2RhbmdlcidcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICBzdWJtaXQ6IGZ1bmN0aW9uIChldmVudCkge1xuXG4gICAgICAgICAgICAgICAgY29uc3QgUmVxdWVzdCA9IGFwcC5yZXF1ZXN0KCdDb21wb3VuZC91cGRhdGVUZW1wbGF0ZVByb3BzJywgT2JqZWN0LmFzc2lnbih0aGlzLmV2ZW50LCB7XG4gICAgICAgICAgICAgICAgICAgIHByb3BzOiB0aGlzLnByb3BzIHx8IFtdXG4gICAgICAgICAgICAgICAgfSkpO1xuXG4gICAgICAgICAgICAgICAgUmVxdWVzdC50aGVuKEV2ZW50ID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fX2VkaXRvci51cGRhdGVNYXJrdXAoKS50aGVuKEV2ZW50ID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRiX3JlbW92ZSgpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgfSxcblxuICAgICAgICB9XG4gICAgfSxcbiAgICByZWFkeTogZnVuY3Rpb24gKEV2ZW50LCAkKSB7XG5cbiAgICB9XG59KTsiXX0=