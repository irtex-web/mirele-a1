"use strict";const CompoundEditor=Project.export("editor",new Interface({requires:{vue:!0,jquery:!0},elements:{vue:["#compound-editor-body"]},vue:{delimiters:["{","}"],el:"#compound-editor-body",data:{markup:[]},mounted:function(){this.__updateMarkup().then(()=>{jQuery("[data-component=\"body\"][data-namespace=\"editor\"]").removeClass("hidden"),jQuery("[data-component=\"spinner\"][data-namespace=\"editor\"]").addClass("hidden");const a=this;document.addEventListener("keydown",function(b){const c=b.key;if("Delete"===c){const b=jQuery("[data-component=\"field-body\"][data-selected]").map((a,b)=>jQuery(b).attr("data-id"));0<b.length&&a.removeTemplate({template:b}).then(()=>{a.reloadPage(),$("[data-component=\"field-body\"][data-selected]").selectable("refresh")}).catch(()=>{})}}),jQuery("[data-behavior=\"editor-template\"][data-namespace=\"editor\"][data-component=\"editor-body\"]").selectable({filter:"[data-component=\"field-body\"]",cancel:"[data-component=\"template-control\"],[data-component=\"field-component\"]",selected:function(a,b){jQuery(b.selected).attr("data-selected",!0)},selecting:function(a,b){jQuery(b.selected).attr("data-selected",!0)},unselected:function(a,b){jQuery(b.unselected).removeAttr("data-selected")},unselecting:function(a,b){jQuery(b.unselected).removeAttr("data-selected")}}),jQuery("[data-behavior=\"editor-template\"]").sortable({axis:"y",containment:"document",disabled:!0,tolerance:"pointer",placeholder:"__compound_box_placeholder",connectWith:jQuery("[data-behavior=\"droppable\"][data-namespace=\"editor\"]"),helper:"clone",opacity:.5,cursor:"move",forcePlaceholderSize:!0,revert:80,update:function(){var a=[];for(const[b,c]of Object.entries(jQuery("[data-component=\"field\"][data-namespace=\"editor\"]"))){const b=jQuery(c).attr("data-id");b&&a.push(b)}new WPAjax("Compound-sort",{page:Compound.page_on_edit||0,order:a})},start:(a,b)=>{jQuery("[data-role=\"trash\"][data-namespace=\"editor\"]").removeClass("hidden"),this.__renderDroppable(),this.__renderPlaceholder(b)},stop:()=>{jQuery("[data-behavior=\"editor-template\"][data-namespace=\"editor\"][data-component=\"editor-body\"]").sortable("option","disabled",!0),jQuery("[data-role=\"trash\"][data-namespace=\"editor\"]").addClass("hidden")}})}).catch(()=>{jQuery("[data-component=\"error\"][data-namespace=\"editor\"]").removeClass("hidden"),jQuery("[data-component=\"spinner\"][data-namespace=\"editor\"]").addClass("hidden")})},methods:{editProps:function(a){const b=Project.import("@form-props").vue;return b.__editor=this,b.open(Object.assign({page:Compound.page_on_edit||0},a))},insertComponent:function(a){const b=Project.import("@form-createComponent").vue;return b.__editor=this,b.open(Object.assign({page:Compound.page_on_edit||0},a))},insertTemplate:function(a){const b=Project.import("@form-insertTemplate").vue;return b.__editor=this,b.open(Object.assign({page:Compound.page_on_edit||0},a))},removeTemplate:function(a){return new WPAjax("Compound-removeTemplate",{page:Compound.page_on_edit||0,template:a.template})},reloadPage:function(){jQuery("[data-namespace=\"editor\"][data-component=\"editor-body\"]").animate({opacity:.3}),this.__updateMarkup().then(()=>{jQuery("[data-namespace=\"editor\"][data-component=\"editor-body\"]").animate({opacity:1})}).catch(()=>{jQuery("[data-namespace=\"editor\"][data-component=\"editor-body\"]").animate({opacity:1})})},__moveEnabled:function(){jQuery("[data-behavior=\"editor-template\"][data-namespace=\"editor\"][data-component=\"editor-body\"]").sortable("option","disabled",!1)},__menuActionRemoveTemplate:function(a){const b=new WPAjax("Compound-removeTemplate",{page:Compound.page_on_edit||0,template:a.template});b.then(()=>{this.__updateMarkup()}).catch(()=>{})},__menuActionEditTemplate:function(){},__metaFieldClass__:function(a){const b=(a||{}).editor||{};return`__compound_field col-${b.col||12}`},__updateMarkup:function(){return new Promise((a,b)=>{new WPAjax("Compound-getMarkup",{page:Compound.page_on_edit||0}).then(b=>{var c=[];for(const[a,d]of Object.entries(b.data.data))c.push({name:d.props.name||"default",id:a,fields:d.fields,props:d.props});this.markup=c,a(b.data.data)}).catch(a=>{b(a)})})},__renderDroppable:function(){return jQuery("[data-behavior=\"droppable\"]").droppable({accept:jQuery("[data-component=\"field\"][data-namespace=\"editor\"]"),activeClass:"wp-mrl-trash-active",hoverClass:"wp-mrl-trash-hover",drop:(a,b)=>{const c=jQuery(b.helper.context).attr("data-id");this.removeTemplate({template:c}),b.draggable.remove()}})},__renderPlaceholder:function(a){return a.placeholder.height(a.item.height())}},filters:{capitalize:function(a){return a?(a=a.toString(),a.charAt(0).toUpperCase()+a.slice(1)):""}}},ready:function(){}}));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,