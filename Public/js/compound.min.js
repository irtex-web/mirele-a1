"use strict";const CONFIG={modal:{width:800,height:600}},CompoundEditor=Project.export("editor",new app.interface({requires:{vue:!0,jquery:!0},elements:{vue:["#compound-editor"]},vue:{delimiters:["{","}"],el:"#compound-editor",data:{markup:[],selected:[],tools:{left:[{title:"...",icon:"dashicons dashicons-plus",href:!1,enabled:!0,click:function(){}},{title:"...",icon:"dashicons dashicons-plus",href:!1,enabled:!1,click:function(){}},{title:"...",icon:"dashicons dashicons-external",href:Compound.page_on_edit_url||!1,enabled:!0,click:function(){}}],right:[{title:"Remove selected templates",icon:"dashicons dashicons-trash",href:!1,enabled:!1,click:function(){return CompoundEditor.vue.transport().removeSelectedTemplates()}},{title:"Remove selected templates",icon:"dashicons dashicons-update",href:!1,enabled:!0,click:function(){return CompoundEditor.vue.reloadPage()}}]},ui:{notify:{type:"success",element:"[data-component=\"notify\"][data-namespace=\"editor\"][data-behavior=\"notify\"][data-role=\"notify\"]",show:function(){jQuery(this.element).removeClass("hidden")},hide:function(){jQuery(this.element).addClass("hidden")},notify:function(a,b){this.type=(b||{}).type||"success",this.show(),"undefined"==typeof(b||{}).html?jQuery(this.element).text((b||{}).text||"Not defined"):jQuery(this.element).html((b||{}).html||"Not defined"),setTimeout(()=>{this.hide()},(b||{}).timeout||2500)}},loader:{element:"[data-component=\"spinner\"][data-namespace=\"editor\"][data-behavior=\"loader\"][data-role=\"loader\"]",show:function(){jQuery(this.element).removeClass("hidden")},hide:function(){jQuery(this.element).addClass("hidden")}},error:{element:"[data-component=\"error\"][data-namespace=\"editor\"][data-behavior=\"error\"][data-role=\"error\"]",show:function(){jQuery(this.element).removeClass("hidden")},hide:function(){jQuery(this.element).addClass("hidden")}},layout:{element:"[data-behavior=\"layout\"][data-namespace=\"editor\"][data-component=\"layout\"][data-role=\"layout\"]",show:function(){jQuery(this.element).removeClass("hidden")},hide:function(){jQuery(this.element).addClass("hidden")},setSortable:function(a=!0){!0==a?jQuery(this.element).sortable("option","disabled",!1):!1==a&&jQuery(this.element).sortable("option","disabled",!0)},blur:function(){jQuery(this.element).blur(),jQuery(this.element).animate({opacity:.3})},focus:function(){jQuery(this.element).focus(),jQuery(this.element).animate({opacity:1})},getSelected:function(){return jQuery("[data-component=\"field-body\"][data-selected]").map((a,b)=>jQuery(b).attr("data-id")||0)||[]},mount:function(a){const b=this;jQuery(this.element).selectable({filter:"[data-component=\"field-body\"]",cancel:"[data-component=\"template-control\"],[data-component=\"field-component\"]",selected:function(c,d){jQuery(d.selected).attr("data-selected",!0),a.selected=b.getSelected()},selecting:function(c,d){jQuery(d.selected).attr("data-selected",!0),a.selected=b.getSelected()},unselected:function(c,d){jQuery(d.unselected).removeAttr("data-selected"),a.selected=b.getSelected()},unselecting:function(c,d){jQuery(d.unselected).removeAttr("data-selected"),a.selected=b.getSelected()}}),jQuery(this.element).sortable({axis:"xy",containment:"document",disabled:!0,placeholder:"__compound_box_placeholder",connectWith:jQuery("[data-behavior=\"droppable\"][data-namespace=\"editor\"]"),helper:"clone",opacity:.5,cursor:"move",forcePlaceholderSize:!0,revert:80,delay:0,update:function(){CompoundEditor.vue.updateOrder()},start:(b,c)=>{c.placeholder.height(c.item.height()),a.ui.trash.show(),a.ui.trash.mount()},stop:()=>{a.ui.layout.setSortable(!1),a.ui.trash.hide()}})},reset:function(){CompoundEditor.vue.selected=[],jQuery(this.element).selectable("refresh")}},body:{element:"[data-behavior=\"body\"][data-namespace=\"editor\"][data-component=\"body\"][data-role=\"body\"]",show:function(){jQuery(this.element).removeClass("hidden")},hide:function(){jQuery(this.element).addClass("hidden")}},trash:{element:"[data-behavior=\"trash\"][data-role=\"trash\"][data-component=\"trash\"][data-namespace=\"editor\"]",show:function(){jQuery(this.element).removeClass("hidden")},hide:function(){jQuery(this.element).addClass("hidden")},mount:function(){return jQuery(this.element).droppable({accept:jQuery("[data-component=\"field\"][data-namespace=\"editor\"]"),activeClass:"wp-mrl-trash-active",hoverClass:"__compound_box_action_unset_hover",drop:(a,b)=>{const c=jQuery(b.helper.context).attr("data-id")||!1;b.draggable.remove(),CompoundEditor.vue.removeTemplate({template:c}).then(()=>{})}})}}}},mounted:function(){this.updateMarkup().then(()=>{this.ui.loader.hide(this),this.ui.body.show(this),this.ui.layout.mount(this)}).catch(()=>{this.ui.loader.hide(this),this.ui.error.show(this)})},methods:{updateMarkup:function(){return new Promise((a,b)=>{app.request("Compound/getMarkup",{page:Compound.page_on_edit||0}).then(b=>{var c=[];for(const[a,d]of Object.entries(b.data))c.push({name:d.props.name||"default",id:a,fields:d.fields,props:d.props});this.markup=c,a(b.data)}).catch(a=>{b(a)})})},editProps:function(a){const b=app.references.form.get.component.props.vue;return b.__editor=this,b.open(Object.assign({page:Compound.page_on_edit||0},a))},insertComponent:function(a){const b=app.references.form.insert.component.vue;return b.__editor=this,b.open(Object.assign({page:Compound.page_on_edit||0},a))},editTemplate:function(a){const b=app.references.form.get.template.props.vue;return b.__editor=this,b.open(Object.assign({page:Compound.page_on_edit||0},a))},insertTemplate:function(a){const b=app.references.form.insert.template.vue;return b.__editor=this,b.open(Object.assign({page:Compound.page_on_edit||0},a))},removeTemplate:function(a){return app.request("Compound/removeTemplate",{page:Compound.page_on_edit||0,template:a.template})},reloadPage:function(){this.ui.layout.blur(),this.updateMarkup().then(()=>{this.ui.layout.focus(),CompoundEditor.vue.ui.notify.notify(!1,{html:"<span class=\"dashicons dashicons-saved\"></span> Changes have been successfully saved"})}).catch(()=>{this.ui.layout.focus()})},updateOrder:function(){var a=[];for(const[b,c]of Object.entries(jQuery("[data-component=\"field\"][data-namespace=\"editor\"]"))){const b=jQuery(c).attr("data-id");b&&a.push(b)}app.request("Compound/sortOrder",{page:Compound.page_on_edit||0,order:a})},transport:function(){const a=CompoundEditor.vue;return{removeSelectedTemplates:function(){0<a.selected.length&&a.removeTemplate({template:a.selected}).then(()=>{a.ui.layout.reset(),a.reloadPage()})},removeTemplate:function(b){if(b.template){const c=app.request("Compound/removeTemplate",{page:Compound.page_on_edit||0,template:b.template});c.then(()=>{a.reloadPage()}).catch(()=>{})}},cloneTemplate:function(b){if(b.template){const c=app.request("Compound/cloneTemplate",{page:Compound.page_on_edit||0,template:b.template});c.then(()=>{a.reloadPage()}).catch(()=>{})}}}},__menuActionEditTemplate:function(){},__metaFieldClass__:function(a){const b=(a||{}).editor||{};return`__compound_field col-${b.col||12}`}},filters:{capitalize:function(a){return a?(a=a.toString(),a.charAt(0).toUpperCase()+a.slice(1)):""}},watch:{selected:function(a){this.tools.right[0].enabled=!!(0<a.length)}}},ready:function(){document.addEventListener("keydown",a=>{const b=a.key||"",c=CompoundEditor.vue||{};"Delete"===b&&c.transport().removeSelectedTemplates()});Project.export("page-meta",new app.interface({requires:{vue:!0,jquery:!0},elements:{vue:["#compound-meta"]},vue:{delimiters:["{","}"],el:"#compound-meta",data:{updated:!0,meta:[]},mounted:function(){const a=this;app.request("Compound/getPage",{page:Compound.page_on_edit||0}).then(b=>{a.meta=b.data})},methods:{submit:function(){this.__show_loader();var a={};jQuery(jQuery("#compound-meta").serializeArray()).each(function(b,c){a[c.name]=c.value}),app.request("Compound/updatePage",{props:a,page:Compound.page_on_edit||0}).then(a=>{console.log(a.data),this.__hide_loader()})},__is_updated:function(){return this.updated},__show_loader:function(){return this.updated=!1},__hide_loader:function(){return this.updated=!0}},filters:{},watch:{}}}))}}));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,