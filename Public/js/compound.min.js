"use strict";const CONFIG={modal:{width:800,height:600}},CompoundEditor=Project.export("editor",new Interface({requires:{vue:!0,jquery:!0},elements:{vue:["#compound-editor"]},vue:{delimiters:["{","}"],el:"#compound-editor",data:{markup:[],selected:[],tools:{left:[{title:"...",icon:"dashicons dashicons-plus",href:!1,enabled:!0,click:function(){}},{title:"...",icon:"dashicons dashicons-plus",href:!1,enabled:!1,click:function(){}},{title:"...",icon:"dashicons dashicons-external",href:Compound.page_on_edit_url||!1,enabled:!0,click:function(){}}],right:[{title:"Remove selected templates",icon:"dashicons dashicons-trash",href:!1,enabled:!1,click:function(){return CompoundEditor.vue.transport().removeSelectedTemplates()}},{title:"Remove selected templates",icon:"dashicons dashicons-update",href:!1,enabled:!0,click:function(){return CompoundEditor.vue.reloadPage()}}]},ui:{notify:{element:"[data-component=\"notify\"][data-namespace=\"editor\"][data-behavior=\"notify\"][data-role=\"notify\"]",show:function(){jQuery(this.element).removeClass("hidden")},hide:function(){jQuery(this.element).addClass("hidden")},notify:function(a,b){this.show(),"undefined"==typeof(b||{}).html?jQuery(this.element).text((b||{}).text||"Not defined"):jQuery(this.element).html((b||{}).html||"Not defined"),setTimeout(()=>{this.hide()},(b||{}).timeout||2500)}},loader:{element:"[data-component=\"spinner\"][data-namespace=\"editor\"][data-behavior=\"loader\"][data-role=\"loader\"]",show:function(){jQuery(this.element).removeClass("hidden")},hide:function(){jQuery(this.element).addClass("hidden")}},error:{element:"[data-component=\"error\"][data-namespace=\"editor\"][data-behavior=\"error\"][data-role=\"error\"]",show:function(){jQuery(this.element).removeClass("hidden")},hide:function(){jQuery(this.element).addClass("hidden")}},layout:{element:"[data-behavior=\"layout\"][data-namespace=\"editor\"][data-component=\"layout\"][data-role=\"layout\"]",show:function(){jQuery(this.element).removeClass("hidden")},hide:function(){jQuery(this.element).addClass("hidden")},setSortable:function(a=!0){!0==a?jQuery(this.element).sortable("option","disabled",!1):!1==a&&jQuery(this.element).sortable("option","disabled",!0)},blur:function(){jQuery(this.element).blur(),jQuery(this.element).animate({opacity:.3})},focus:function(){jQuery(this.element).focus(),jQuery(this.element).animate({opacity:1})},getSelected:function(){return jQuery("[data-component=\"field-body\"][data-selected]").map((a,b)=>jQuery(b).attr("data-id")||0)||[]},mount:function(a){const b=this;jQuery(this.element).selectable({filter:"[data-component=\"field-body\"]",cancel:"[data-component=\"template-control\"],[data-component=\"field-component\"]",selected:function(c,d){jQuery(d.selected).attr("data-selected",!0),a.selected=b.getSelected()},selecting:function(c,d){jQuery(d.selected).attr("data-selected",!0),a.selected=b.getSelected()},unselected:function(c,d){jQuery(d.unselected).removeAttr("data-selected"),a.selected=b.getSelected()},unselecting:function(c,d){jQuery(d.unselected).removeAttr("data-selected"),a.selected=b.getSelected()}}),jQuery(this.element).sortable({axis:"xy",containment:"document",disabled:!0,placeholder:"__compound_box_placeholder",connectWith:jQuery("[data-behavior=\"droppable\"][data-namespace=\"editor\"]"),helper:"clone",opacity:.5,cursor:"move",forcePlaceholderSize:!0,revert:80,delay:0,update:function(){CompoundEditor.vue.updateOrder()},start:(b,c)=>{c.placeholder.height(c.item.height()),a.ui.trash.show(),a.ui.trash.mount()},stop:()=>{a.ui.layout.setSortable(!1),a.ui.trash.hide()}})},reset:function(){CompoundEditor.vue.selected=[],jQuery(this.element).selectable("refresh")}},body:{element:"[data-behavior=\"body\"][data-namespace=\"editor\"][data-component=\"body\"][data-role=\"body\"]",show:function(){jQuery(this.element).removeClass("hidden")},hide:function(){jQuery(this.element).addClass("hidden")}},trash:{element:"[data-behavior=\"trash\"][data-role=\"trash\"][data-component=\"trash\"][data-namespace=\"editor\"]",show:function(){jQuery(this.element).removeClass("hidden")},hide:function(){jQuery(this.element).addClass("hidden")},mount:function(){return jQuery(this.element).droppable({accept:jQuery("[data-component=\"field\"][data-namespace=\"editor\"]"),activeClass:"wp-mrl-trash-active",hoverClass:"__compound_box_action_unset_hover",drop:(a,b)=>{const c=jQuery(b.helper.context).attr("data-id")||!1;b.draggable.remove(),CompoundEditor.vue.removeTemplate({template:c}).then(()=>{})}})}}}},mounted:function(){this.updateMarkup().then(()=>{this.ui.loader.hide(this),this.ui.body.show(this),this.ui.layout.mount(this)}).catch(()=>{this.ui.loader.hide(this),this.ui.error.show(this)})},methods:{updateMarkup:function(){return new Promise((a,b)=>{new AIK().postman("Compound-getMarkup",{page:Compound.page_on_edit||0}).then(b=>{var c=[];for(const[a,d]of Object.entries(b.data.data))c.push({name:d.props.name||"default",id:a,fields:d.fields,props:d.props});this.markup=c,a(b.data.data)}).catch(a=>{b(a)})})},editProps:function(a){const b=Project.import("@form-props").vue;return b.__editor=this,b.open(Object.assign({page:Compound.page_on_edit||0},a))},insertComponent:function(a){const b=Project.import("@form-createComponent").vue;return b.__editor=this,b.open(Object.assign({page:Compound.page_on_edit||0},a))},editTemplate:function(a){const b=Project.import("@form-propsTemplate").vue;return b.__editor=this,b.open(Object.assign({page:Compound.page_on_edit||0},a))},insertTemplate:function(a){const b=Project.import("@form-insertTemplate").vue;return b.__editor=this,b.open(Object.assign({page:Compound.page_on_edit||0},a))},removeTemplate:function(a){return new AIK().postman("Compound-removeTemplate",{page:Compound.page_on_edit||0,template:a.template})},reloadPage:function(){this.ui.layout.blur(),this.updateMarkup().then(()=>{this.ui.layout.focus(),CompoundEditor.vue.ui.notify.notify(!1,{html:"<span class=\"dashicons dashicons-saved\"></span> Changes have been successfully saved"})}).catch(()=>{this.ui.layout.focus()})},updateOrder:function(){var a=[];for(const[b,c]of Object.entries(jQuery("[data-component=\"field\"][data-namespace=\"editor\"]"))){const b=jQuery(c).attr("data-id");b&&a.push(b)}new AIK().postman("Compound-sort",{page:Compound.page_on_edit||0,order:a})},transport:function(){const a=CompoundEditor.vue;return{removeSelectedTemplates:function(){0<a.selected.length&&a.removeTemplate({template:a.selected}).then(()=>{a.ui.layout.reset(),a.reloadPage()})},removeTemplate:function(b){if(b.template){const c=new AIK().postman("Compound-removeTemplate",{page:Compound.page_on_edit||0,template:b.template});c.then(()=>{a.reloadPage()}).catch(()=>{})}}}},__menuActionEditTemplate:function(){},__metaFieldClass__:function(a){const b=(a||{}).editor||{};return`__compound_field col-${b.col||12}`}},filters:{capitalize:function(a){return a?(a=a.toString(),a.charAt(0).toUpperCase()+a.slice(1)):""}},watch:{selected:function(a){this.tools.right[0].enabled=!!(0<a.length)}}},ready:function(){document.addEventListener("keydown",a=>{const b=a.key||"",c=CompoundEditor.vue||{};"Delete"===b&&c.transport().removeSelectedTemplates()})}}));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QW9CLE9BRkQsSUFDSixDQUFmLENBQUEsQ0FBSyxDQUFDLE1BRGEsQ0FNMUIsQ0FQRSxDQXhZTixDQVJxRCxDQTBaMUQsS0FBSyxDQUFFLFVBQW9CLENBR3ZCLFFBQVEsQ0FBQyxnQkFBVCxDQUEwQixTQUExQixDQUFxQyxDQUFLLEVBQUksTUFFcEMsQ0FBQSxDQUFHLENBQUcsQ0FBSyxDQUFDLEdBQU4sRUFBYSxFQUZpQixDQUdwQyxDQUFJLENBQUcsY0FBYyxDQUFDLEdBQWYsRUFBc0IsRUFITyxDQUs5QixRQUFSLEdBQUEsQ0FMc0MsRUFNdEMsQ0FBSSxDQUFDLFNBQUwsR0FBaUIsdUJBQWpCLEVBRVAsQ0FSRCxDQVVILENBdmF5RCxDQUFkLENBQXpCLEMiLCJmaWxlIjoiY29tcG91bmQubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBXZWxjb21lIHRvIHRoZSBzb3VyY2UgY29kZVxuICpcbiAqIOKWiOKWiOKWiOKVl+KWkeKWkeKWkeKWiOKWiOKWiOKVl+KWiOKWiOKVl+KWiOKWiOKWiOKWiOKWiOKWiOKVl+KWkeKWiOKWiOKWiOKWiOKWiOKWiOKWiOKVl+KWiOKWiOKVl+KWkeKWkeKWkeKWkeKWkeKWiOKWiOKWiOKWiOKWiOKWiOKWiOKVlyAgICAgICAg4paR4paR4paR4paR4paR4paI4paI4pWX4paR4paI4paI4paI4paI4paI4paI4pWXXG4gKiDilojilojilojilojilZfilpHilojilojilojilojilZHilojilojilZHilojilojilZTilZDilZDilojilojilZfilojilojilZTilZDilZDilZDilZDilZ3ilojilojilZHilpHilpHilpHilpHilpHilojilojilZTilZDilZDilZDilZDilZ0gICAgICAgIOKWkeKWkeKWkeKWkeKWkeKWiOKWiOKVkeKWiOKWiOKVlOKVkOKVkOKVkOKVkOKVnVxuICog4paI4paI4pWU4paI4paI4paI4paI4pWU4paI4paI4pWR4paI4paI4pWR4paI4paI4paI4paI4paI4paI4pWU4pWd4paI4paI4paI4paI4paI4pWX4paR4paR4paI4paI4pWR4paR4paR4paR4paR4paR4paI4paI4paI4paI4paI4pWX4paR4paRICAgICAgICDilpHilpHilpHilpHilpHilojilojilZHilZrilojilojilojilojilojilZfilpFcbiAqIOKWiOKWiOKVkeKVmuKWiOKWiOKVlOKVneKWiOKWiOKVkeKWiOKWiOKVkeKWiOKWiOKVlOKVkOKVkOKWiOKWiOKVl+KWiOKWiOKVlOKVkOKVkOKVneKWkeKWkeKWiOKWiOKVkeKWkeKWkeKWkeKWkeKWkeKWiOKWiOKVlOKVkOKVkOKVneKWkeKWkSAgICAgICAg4paI4paI4pWX4paR4paR4paI4paI4pWR4paR4pWa4pWQ4pWQ4pWQ4paI4paI4pWXXG4gKiDilojilojilZHilpHilZrilZDilZ3ilpHilojilojilZHilojilojilZHilojilojilZHilpHilpHilojilojilZHilojilojilojilojilojilojilojilZfilojilojilojilojilojilojilojilZfilojilojilojilojilojilojilojilZcgICAgICAgIOKVmuKWiOKWiOKWiOKWiOKWiOKVlOKVneKWiOKWiOKWiOKWiOKWiOKWiOKVlOKVnVxuICog4pWa4pWQ4pWd4paR4paR4paR4paR4paR4pWa4pWQ4pWd4pWa4pWQ4pWd4pWa4pWQ4pWd4paR4paR4pWa4pWQ4pWd4pWa4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWd4pWa4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWd4pWa4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWdICAgICAgICDilpHilZrilZDilZDilZDilZDilZ3ilpHilZrilZDilZDilZDilZDilZDilZ3ilpFcbiAqXG4gKiDilpHilojilojilojilojilojilZfilpHilojilojilojilojilojilojilZfilpHilojilojilojilZfilpHilpHilpHilojilojilojilZfilojilojilZfilojilojilojilZfilpHilpHilojilojilZfilojilojilZfilpHilojilojilojilojilojilojilZfilojilojilojilojilojilojilojilojilZfilojilojilojilojilojilojilZfilpHilpHilojilojilojilojilojilZfilpHilojilojilojilojilojilojilojilojilZfilpHilojilojilojilojilojilZfilpHilojilojilojilojilojilojilZfilpFcbiAqIOKWiOKWiOKVlOKVkOKVkOKWiOKWiOKVl+KWiOKWiOKVlOKVkOKVkOKWiOKWiOKVl+KWiOKWiOKWiOKWiOKVl+KWkeKWiOKWiOKWiOKWiOKVkeKWiOKWiOKVkeKWiOKWiOKWiOKWiOKVl+KWkeKWiOKWiOKVkeKWiOKWiOKVkeKWiOKWiOKVlOKVkOKVkOKVkOKVkOKVneKVmuKVkOKVkOKWiOKWiOKVlOKVkOKVkOKVneKWiOKWiOKVlOKVkOKVkOKWiOKWiOKVl+KWiOKWiOKVlOKVkOKVkOKWiOKWiOKVl+KVmuKVkOKVkOKWiOKWiOKVlOKVkOKVkOKVneKWiOKWiOKVlOKVkOKVkOKWiOKWiOKVl+KWiOKWiOKVlOKVkOKVkOKWiOKWiOKVl1xuICog4paI4paI4paI4paI4paI4paI4paI4pWR4paI4paI4pWR4paR4paR4paI4paI4pWR4paI4paI4pWU4paI4paI4paI4paI4pWU4paI4paI4pWR4paI4paI4pWR4paI4paI4pWU4paI4paI4pWX4paI4paI4pWR4paI4paI4pWR4pWa4paI4paI4paI4paI4paI4pWX4paR4paR4paR4paR4paI4paI4pWR4paR4paR4paR4paI4paI4paI4paI4paI4paI4pWU4pWd4paI4paI4paI4paI4paI4paI4paI4pWR4paR4paR4paR4paI4paI4pWR4paR4paR4paR4paI4paI4pWR4paR4paR4paI4paI4pWR4paI4paI4paI4paI4paI4paI4pWU4pWdXG4gKiDilojilojilZTilZDilZDilojilojilZHilojilojilZHilpHilpHilojilojilZHilojilojilZHilZrilojilojilZTilZ3ilojilojilZHilojilojilZHilojilojilZHilZrilojilojilojilojilZHilojilojilZHilpHilZrilZDilZDilZDilojilojilZfilpHilpHilpHilojilojilZHilpHilpHilpHilojilojilZTilZDilZDilojilojilZfilojilojilZTilZDilZDilojilojilZHilpHilpHilpHilojilojilZHilpHilpHilpHilojilojilZHilpHilpHilojilojilZHilojilojilZTilZDilZDilojilojilZdcbiAqIOKWiOKWiOKVkeKWkeKWkeKWiOKWiOKVkeKWiOKWiOKWiOKWiOKWiOKWiOKVlOKVneKWiOKWiOKVkeKWkeKVmuKVkOKVneKWkeKWiOKWiOKVkeKWiOKWiOKVkeKWiOKWiOKVkeKWkeKVmuKWiOKWiOKWiOKVkeKWiOKWiOKVkeKWiOKWiOKWiOKWiOKWiOKWiOKVlOKVneKWkeKWkeKWkeKWiOKWiOKVkeKWkeKWkeKWkeKWiOKWiOKVkeKWkeKWkeKWiOKWiOKVkeKWiOKWiOKVkeKWkeKWkeKWiOKWiOKVkeKWkeKWkeKWkeKWiOKWiOKVkeKWkeKWkeKWkeKVmuKWiOKWiOKWiOKWiOKWiOKVlOKVneKWiOKWiOKVkeKWkeKWkeKWiOKWiOKVkVxuICog4pWa4pWQ4pWd4paR4paR4pWa4pWQ4pWd4pWa4pWQ4pWQ4pWQ4pWQ4pWQ4pWd4paR4pWa4pWQ4pWd4paR4paR4paR4paR4paR4pWa4pWQ4pWd4pWa4pWQ4pWd4pWa4pWQ4pWd4paR4paR4pWa4pWQ4pWQ4pWd4pWa4pWQ4pWd4pWa4pWQ4pWQ4pWQ4pWQ4pWQ4pWd4paR4paR4paR4paR4pWa4pWQ4pWd4paR4paR4paR4pWa4pWQ4pWd4paR4paR4pWa4pWQ4pWd4pWa4pWQ4pWd4paR4paR4pWa4pWQ4pWd4paR4paR4paR4pWa4pWQ4pWd4paR4paR4paR4paR4pWa4pWQ4pWQ4pWQ4pWQ4pWd4paR4pWa4pWQ4pWd4paR4paR4pWa4pWQ4pWdXG4gKlxuICpcbiAqXG4gKiBAcGFja2FnZSBNaXJlbGVcbiAqIEBhdXRob3IgTWlyZWxlXG4gKiBAdmVyc2lvbiAxLjAuMFxuICpcbiAqIEBzZWUgaHR0cHM6Ly92dWVqcy5vcmcvdjIvZ3VpZGUvXG4gKi9cblxuXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0IENPTkZJRyA9IHtcbiAgICBtb2RhbDoge1xuICAgICAgICB3aWR0aDogODAwLFxuICAgICAgICBoZWlnaHQ6IDYwMFxuICAgIH1cbn07XG5cbmNvbnN0IENvbXBvdW5kRWRpdG9yID0gUHJvamVjdC5leHBvcnQoJ2VkaXRvcicsIG5ldyBJbnRlcmZhY2Uoe1xuICAgIHJlcXVpcmVzOiB7XG4gICAgICAgIHZ1ZTogdHJ1ZSxcbiAgICAgICAganF1ZXJ5OiB0cnVlXG4gICAgfSxcbiAgICBlbGVtZW50czoge1xuICAgICAgICB2dWU6IFsnI2NvbXBvdW5kLWVkaXRvciddXG4gICAgfSxcbiAgICB2dWU6IHtcbiAgICAgICAgZGVsaW1pdGVyczogWyd7JywgJ30nXSxcbiAgICAgICAgZWw6IFwiI2NvbXBvdW5kLWVkaXRvclwiLFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBtYXJrdXA6IFtdLFxuICAgICAgICAgICAgc2VsZWN0ZWQ6IFtdLFxuICAgICAgICAgICAgdG9vbHM6IHtcbiAgICAgICAgICAgICAgICBsZWZ0OiBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiAnLi4uJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGljb246ICdkYXNoaWNvbnMgZGFzaGljb25zLXBsdXMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgaHJlZjogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBlbmFibGVkOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICcuLi4nLFxuICAgICAgICAgICAgICAgICAgICAgICAgaWNvbjogJ2Rhc2hpY29ucyBkYXNoaWNvbnMtcGx1cycsXG4gICAgICAgICAgICAgICAgICAgICAgICBocmVmOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGVuYWJsZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICcuLi4nLFxuICAgICAgICAgICAgICAgICAgICAgICAgaWNvbjogJ2Rhc2hpY29ucyBkYXNoaWNvbnMtZXh0ZXJuYWwnLFxuICAgICAgICAgICAgICAgICAgICAgICAgaHJlZjogQ29tcG91bmQucGFnZV9vbl9lZGl0X3VybCB8fCBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgcmlnaHQ6IFtcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICdSZW1vdmUgc2VsZWN0ZWQgdGVtcGxhdGVzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGljb246ICdkYXNoaWNvbnMgZGFzaGljb25zLXRyYXNoJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgZW5hYmxlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBDb21wb3VuZEVkaXRvci52dWUudHJhbnNwb3J0KCkucmVtb3ZlU2VsZWN0ZWRUZW1wbGF0ZXMoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ1JlbW92ZSBzZWxlY3RlZCB0ZW1wbGF0ZXMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgaWNvbjogJ2Rhc2hpY29ucyBkYXNoaWNvbnMtdXBkYXRlJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIENvbXBvdW5kRWRpdG9yLnZ1ZS5yZWxvYWRQYWdlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdWk6IHtcbiAgICAgICAgICAgICAgICBub3RpZnk6IHtcbiAgICAgICAgICAgICAgICAgICAgZWxlbWVudDogJ1tkYXRhLWNvbXBvbmVudD1cIm5vdGlmeVwiXVtkYXRhLW5hbWVzcGFjZT1cImVkaXRvclwiXVtkYXRhLWJlaGF2aW9yPVwibm90aWZ5XCJdW2RhdGEtcm9sZT1cIm5vdGlmeVwiXScsXG4gICAgICAgICAgICAgICAgICAgIHNob3c6IGZ1bmN0aW9uIChzZWxmLCBldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgalF1ZXJ5KHRoaXMuZWxlbWVudCkucmVtb3ZlQ2xhc3MoJ2hpZGRlbicpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBoaWRlOiBmdW5jdGlvbiAoc2VsZiwgZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGpRdWVyeSh0aGlzLmVsZW1lbnQpLmFkZENsYXNzKCdoaWRkZW4nKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgbm90aWZ5OiBmdW5jdGlvbiAoc2VsZiwgZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvdygpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIChldmVudCB8fCB7fSkuaHRtbCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBqUXVlcnkodGhpcy5lbGVtZW50KS5odG1sKChldmVudCB8fCB7fSkuaHRtbCB8fCAnTm90IGRlZmluZWQnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgalF1ZXJ5KHRoaXMuZWxlbWVudCkudGV4dCgoZXZlbnQgfHwge30pLnRleHQgfHwgJ05vdCBkZWZpbmVkJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoRXZlbnQgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaGlkZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSwgKGV2ZW50IHx8IHt9KS50aW1lb3V0IHx8IDI1MDApO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBsb2FkZXI6IHtcbiAgICAgICAgICAgICAgICAgICAgZWxlbWVudDogJ1tkYXRhLWNvbXBvbmVudD1cInNwaW5uZXJcIl1bZGF0YS1uYW1lc3BhY2U9XCJlZGl0b3JcIl1bZGF0YS1iZWhhdmlvcj1cImxvYWRlclwiXVtkYXRhLXJvbGU9XCJsb2FkZXJcIl0nLFxuICAgICAgICAgICAgICAgICAgICBzaG93OiBmdW5jdGlvbiAoc2VsZiwgZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGpRdWVyeSh0aGlzLmVsZW1lbnQpLnJlbW92ZUNsYXNzKCdoaWRkZW4nKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgaGlkZTogZnVuY3Rpb24gKHNlbGYsIGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBqUXVlcnkodGhpcy5lbGVtZW50KS5hZGRDbGFzcygnaGlkZGVuJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGVycm9yOiB7XG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQ6ICdbZGF0YS1jb21wb25lbnQ9XCJlcnJvclwiXVtkYXRhLW5hbWVzcGFjZT1cImVkaXRvclwiXVtkYXRhLWJlaGF2aW9yPVwiZXJyb3JcIl1bZGF0YS1yb2xlPVwiZXJyb3JcIl0nLFxuICAgICAgICAgICAgICAgICAgICBzaG93OiBmdW5jdGlvbiAoc2VsZiwgZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGpRdWVyeSh0aGlzLmVsZW1lbnQpLnJlbW92ZUNsYXNzKCdoaWRkZW4nKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgaGlkZTogZnVuY3Rpb24gKHNlbGYsIGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBqUXVlcnkodGhpcy5lbGVtZW50KS5hZGRDbGFzcygnaGlkZGVuJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGxheW91dDoge1xuICAgICAgICAgICAgICAgICAgICBlbGVtZW50OiAnW2RhdGEtYmVoYXZpb3I9XCJsYXlvdXRcIl1bZGF0YS1uYW1lc3BhY2U9XCJlZGl0b3JcIl1bZGF0YS1jb21wb25lbnQ9XCJsYXlvdXRcIl1bZGF0YS1yb2xlPVwibGF5b3V0XCJdJyxcbiAgICAgICAgICAgICAgICAgICAgc2hvdzogZnVuY3Rpb24gKHNlbGYsIGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBqUXVlcnkodGhpcy5lbGVtZW50KS5yZW1vdmVDbGFzcygnaGlkZGVuJyk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGhpZGU6IGZ1bmN0aW9uIChzZWxmLCBldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgalF1ZXJ5KHRoaXMuZWxlbWVudCkuYWRkQ2xhc3MoJ2hpZGRlbicpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBzZXRTb3J0YWJsZTogZnVuY3Rpb24gKGJvb2xlYW4gPSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYm9vbGVhbiA9PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgalF1ZXJ5KHRoaXMuZWxlbWVudCkuc29ydGFibGUoXCJvcHRpb25cIiwgXCJkaXNhYmxlZFwiLCAhdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGJvb2xlYW4gPT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBqUXVlcnkodGhpcy5lbGVtZW50KS5zb3J0YWJsZShcIm9wdGlvblwiLCBcImRpc2FibGVkXCIsICFmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGJsdXI6IGZ1bmN0aW9uIChzZWxmLCBldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgalF1ZXJ5KHRoaXMuZWxlbWVudCkuYmx1cigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgalF1ZXJ5KHRoaXMuZWxlbWVudCkuYW5pbWF0ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMC4zXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgZm9jdXM6IGZ1bmN0aW9uIChzZWxmLCBldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgalF1ZXJ5KHRoaXMuZWxlbWVudCkuZm9jdXMoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGpRdWVyeSh0aGlzLmVsZW1lbnQpLmFuaW1hdGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDFcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBnZXRTZWxlY3RlZDogZnVuY3Rpb24gKHNlbGYsIGV2ZW50KSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0ICRlbGVtZW50ID0gJ1tkYXRhLWNvbXBvbmVudD1cImZpZWxkLWJvZHlcIl1bZGF0YS1zZWxlY3RlZF0nO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4galF1ZXJ5KCRlbGVtZW50KS5tYXAoKGksIGVsZW1lbnQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4galF1ZXJ5KGVsZW1lbnQpLmF0dHIoJ2RhdGEtaWQnKSB8fCAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSkgfHwgW107XG5cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgbW91bnQ6IGZ1bmN0aW9uIChzZWxmLCBldmVudCkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjb250ZXh0ID0gdGhpcztcblxuICAgICAgICAgICAgICAgICAgICAgICAgalF1ZXJ5KHRoaXMuZWxlbWVudCkuc2VsZWN0YWJsZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsdGVyOiAnW2RhdGEtY29tcG9uZW50PVwiZmllbGQtYm9keVwiXScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FuY2VsOiAnW2RhdGEtY29tcG9uZW50PVwidGVtcGxhdGUtY29udHJvbFwiXSxbZGF0YS1jb21wb25lbnQ9XCJmaWVsZC1jb21wb25lbnRcIl0nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmdW5jdGlvbiAoZXZlbnQsIHVpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGpRdWVyeSh1aS5zZWxlY3RlZCkuYXR0cignZGF0YS1zZWxlY3RlZCcsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLnNlbGVjdGVkID0gY29udGV4dC5nZXRTZWxlY3RlZCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0aW5nOiBmdW5jdGlvbiAoZXZlbnQsIHVpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGpRdWVyeSh1aS5zZWxlY3RlZCkuYXR0cignZGF0YS1zZWxlY3RlZCcsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLnNlbGVjdGVkID0gY29udGV4dC5nZXRTZWxlY3RlZCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdW5zZWxlY3RlZDogZnVuY3Rpb24gKGV2ZW50LCB1aSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBqUXVlcnkodWkudW5zZWxlY3RlZCkucmVtb3ZlQXR0cignZGF0YS1zZWxlY3RlZCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLnNlbGVjdGVkID0gY29udGV4dC5nZXRTZWxlY3RlZCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdW5zZWxlY3Rpbmc6IGZ1bmN0aW9uIChldmVudCwgdWkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgalF1ZXJ5KHVpLnVuc2VsZWN0ZWQpLnJlbW92ZUF0dHIoJ2RhdGEtc2VsZWN0ZWQnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5zZWxlY3RlZCA9IGNvbnRleHQuZ2V0U2VsZWN0ZWQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGpRdWVyeSh0aGlzLmVsZW1lbnQpLnNvcnRhYmxlKHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF4aXM6IFwieHlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250YWlubWVudDogXCJkb2N1bWVudFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHRvbGVyYW5jZTogXCJwb2ludGVyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IFwiX19jb21wb3VuZF9ib3hfcGxhY2Vob2xkZXJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25uZWN0V2l0aDogalF1ZXJ5KCdbZGF0YS1iZWhhdmlvcj1cImRyb3BwYWJsZVwiXVtkYXRhLW5hbWVzcGFjZT1cImVkaXRvclwiXScpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlbHBlcjogJ2Nsb25lJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLjUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBcIm1vdmVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3JjZVBsYWNlaG9sZGVyU2l6ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXZlcnQ6IDgwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlbGF5OiAwLFxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlOiBmdW5jdGlvbiAoZXZlbnQsIHVpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbXBvdW5kRWRpdG9yLnZ1ZS51cGRhdGVPcmRlcigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnQ6IChldmVudCwgdWkpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdWkucGxhY2Vob2xkZXIuaGVpZ2h0KHVpLml0ZW0uaGVpZ2h0KCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLnVpLnRyYXNoLnNob3coKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi51aS50cmFzaC5tb3VudCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RvcDogKGV2ZW50LCB1aSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLnVpLmxheW91dC5zZXRTb3J0YWJsZShmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYudWkudHJhc2guaGlkZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHJlc2V0OiBmdW5jdGlvbiAoc2VsZiwgZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIENvbXBvdW5kRWRpdG9yLnZ1ZS5zZWxlY3RlZCA9IFtdO1xuICAgICAgICAgICAgICAgICAgICAgICAgalF1ZXJ5KHRoaXMuZWxlbWVudCkuc2VsZWN0YWJsZShcInJlZnJlc2hcIik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGJvZHk6IHtcbiAgICAgICAgICAgICAgICAgICAgZWxlbWVudDogJ1tkYXRhLWJlaGF2aW9yPVwiYm9keVwiXVtkYXRhLW5hbWVzcGFjZT1cImVkaXRvclwiXVtkYXRhLWNvbXBvbmVudD1cImJvZHlcIl1bZGF0YS1yb2xlPVwiYm9keVwiXScsXG4gICAgICAgICAgICAgICAgICAgIHNob3c6IGZ1bmN0aW9uIChzZWxmLCBldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgalF1ZXJ5KHRoaXMuZWxlbWVudCkucmVtb3ZlQ2xhc3MoJ2hpZGRlbicpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBoaWRlOiBmdW5jdGlvbiAoc2VsZiwgZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGpRdWVyeSh0aGlzLmVsZW1lbnQpLmFkZENsYXNzKCdoaWRkZW4nKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgdHJhc2g6IHtcbiAgICAgICAgICAgICAgICAgICAgZWxlbWVudDogJ1tkYXRhLWJlaGF2aW9yPVwidHJhc2hcIl1bZGF0YS1yb2xlPVwidHJhc2hcIl1bZGF0YS1jb21wb25lbnQ9XCJ0cmFzaFwiXVtkYXRhLW5hbWVzcGFjZT1cImVkaXRvclwiXScsXG4gICAgICAgICAgICAgICAgICAgIHNob3c6IGZ1bmN0aW9uIChzZWxmLCBldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgalF1ZXJ5KHRoaXMuZWxlbWVudCkucmVtb3ZlQ2xhc3MoJ2hpZGRlbicpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBoaWRlOiBmdW5jdGlvbiAoc2VsZiwgZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGpRdWVyeSh0aGlzLmVsZW1lbnQpLmFkZENsYXNzKCdoaWRkZW4nKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgbW91bnQ6IGZ1bmN0aW9uIChzZWxmLCBldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGpRdWVyeSh0aGlzLmVsZW1lbnQpLmRyb3BwYWJsZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWNjZXB0OiBqUXVlcnkoJ1tkYXRhLWNvbXBvbmVudD1cImZpZWxkXCJdW2RhdGEtbmFtZXNwYWNlPVwiZWRpdG9yXCJdJyksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWN0aXZlQ2xhc3M6ICd3cC1tcmwtdHJhc2gtYWN0aXZlJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBob3ZlckNsYXNzOiAnX19jb21wb3VuZF9ib3hfYWN0aW9uX3Vuc2V0X2hvdmVyJyxcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRyb3A6IChldmVudCwgdWkpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgJHRlbXBsYXRlID0galF1ZXJ5KHVpLmhlbHBlci5jb250ZXh0KS5hdHRyKCdkYXRhLWlkJykgfHwgZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVpLmRyYWdnYWJsZS5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29tcG91bmRFZGl0b3IudnVlLnJlbW92ZVRlbXBsYXRlKHt0ZW1wbGF0ZTogJHRlbXBsYXRlfSkudGhlbihFdmVudCA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBGSVhNRVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgbW91bnRlZDogZnVuY3Rpb24gKEV2ZW50KSB7XG5cbiAgICAgICAgICAgIHRoaXMudXBkYXRlTWFya3VwKCkudGhlbihEYXRhID0+IHtcblxuICAgICAgICAgICAgICAgIHRoaXMudWkubG9hZGVyLmhpZGUodGhpcyk7XG4gICAgICAgICAgICAgICAgdGhpcy51aS5ib2R5LnNob3codGhpcyk7XG4gICAgICAgICAgICAgICAgdGhpcy51aS5sYXlvdXQubW91bnQodGhpcyk7XG5cbiAgICAgICAgICAgIH0pLmNhdGNoKERhdGEgPT4ge1xuXG4gICAgICAgICAgICAgICAgdGhpcy51aS5sb2FkZXIuaGlkZSh0aGlzKTtcbiAgICAgICAgICAgICAgICB0aGlzLnVpLmVycm9yLnNob3codGhpcyk7XG5cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIH0sXG4gICAgICAgIG1ldGhvZHM6IHtcblxuICAgICAgICAgICAgdXBkYXRlTWFya3VwOiBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIENyZWF0ZSBtYWluIHJlcXVlc3RcbiAgICAgICAgICAgICAgICAgICAgKChuZXcgQUlLKS5wb3N0bWFuKCdDb21wb3VuZC1nZXRNYXJrdXAnLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYWdlOiBDb21wb3VuZC5wYWdlX29uX2VkaXQgfHwgMFxuICAgICAgICAgICAgICAgICAgICB9KSkudGhlbihFdmVudCA9PiB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciAkYnVmZmVyID0gW107XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgW2lkLCB0ZW1wbGF0ZV0gb2YgT2JqZWN0LmVudHJpZXMoRXZlbnQuZGF0YS5kYXRhKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRidWZmZXIucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IHRlbXBsYXRlLnByb3BzLm5hbWUgfHwgJ2RlZmF1bHQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogaWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkczogdGVtcGxhdGUuZmllbGRzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9wczogdGVtcGxhdGUucHJvcHNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5tYXJrdXAgPSAkYnVmZmVyO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBSZXNvbHZlXG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKEV2ZW50LmRhdGEuZGF0YSk7XG5cbiAgICAgICAgICAgICAgICAgICAgfSkuY2F0Y2goRXZlbnQgPT4ge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBSZWplY3RcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChFdmVudCk7XG5cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICBlZGl0UHJvcHM6IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgICAgIGNvbnN0ICRmb3JtID0gUHJvamVjdC5pbXBvcnQoJ0Bmb3JtLXByb3BzJykudnVlO1xuICAgICAgICAgICAgICAgICRmb3JtLl9fZWRpdG9yID0gdGhpcztcbiAgICAgICAgICAgICAgICByZXR1cm4gJGZvcm0ub3BlbihPYmplY3QuYXNzaWduKHtcbiAgICAgICAgICAgICAgICAgICAgcGFnZTogQ29tcG91bmQucGFnZV9vbl9lZGl0IHx8IDBcbiAgICAgICAgICAgICAgICB9LCBldmVudCkpO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgaW5zZXJ0Q29tcG9uZW50OiBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgICAgICBjb25zdCAkZm9ybSA9IFByb2plY3QuaW1wb3J0KCdAZm9ybS1jcmVhdGVDb21wb25lbnQnKS52dWU7XG4gICAgICAgICAgICAgICAgJGZvcm0uX19lZGl0b3IgPSB0aGlzO1xuICAgICAgICAgICAgICAgIHJldHVybiAkZm9ybS5vcGVuKE9iamVjdC5hc3NpZ24oe1xuICAgICAgICAgICAgICAgICAgICBwYWdlOiBDb21wb3VuZC5wYWdlX29uX2VkaXQgfHwgMCxcbiAgICAgICAgICAgICAgICB9LCBldmVudCkpO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgZWRpdFRlbXBsYXRlOiBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgICAgICBjb25zdCAkZm9ybSA9IFByb2plY3QuaW1wb3J0KCdAZm9ybS1wcm9wc1RlbXBsYXRlJykudnVlO1xuICAgICAgICAgICAgICAgICRmb3JtLl9fZWRpdG9yID0gdGhpcztcbiAgICAgICAgICAgICAgICByZXR1cm4gJGZvcm0ub3BlbihPYmplY3QuYXNzaWduKHtcbiAgICAgICAgICAgICAgICAgICAgcGFnZTogQ29tcG91bmQucGFnZV9vbl9lZGl0IHx8IDBcbiAgICAgICAgICAgICAgICB9LCBldmVudCkpO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgaW5zZXJ0VGVtcGxhdGU6IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgICAgIGNvbnN0ICRmb3JtID0gUHJvamVjdC5pbXBvcnQoJ0Bmb3JtLWluc2VydFRlbXBsYXRlJykudnVlO1xuICAgICAgICAgICAgICAgICRmb3JtLl9fZWRpdG9yID0gdGhpcztcbiAgICAgICAgICAgICAgICByZXR1cm4gJGZvcm0ub3BlbihPYmplY3QuYXNzaWduKHtcbiAgICAgICAgICAgICAgICAgICAgcGFnZTogQ29tcG91bmQucGFnZV9vbl9lZGl0IHx8IDAsXG4gICAgICAgICAgICAgICAgfSwgZXZlbnQpKTtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIHJlbW92ZVRlbXBsYXRlOiBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKG5ldyBBSUspLnBvc3RtYW4oJ0NvbXBvdW5kLXJlbW92ZVRlbXBsYXRlJywge1xuICAgICAgICAgICAgICAgICAgICBwYWdlOiBDb21wb3VuZC5wYWdlX29uX2VkaXQgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGU6IGV2ZW50LnRlbXBsYXRlXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICByZWxvYWRQYWdlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy51aS5sYXlvdXQuYmx1cigpXG4gICAgICAgICAgICAgICAgdGhpcy51cGRhdGVNYXJrdXAoKS50aGVuKEV2ZW50ID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy51aS5sYXlvdXQuZm9jdXMoKTtcbiAgICAgICAgICAgICAgICAgICAgQ29tcG91bmRFZGl0b3IudnVlLnVpLm5vdGlmeS5ub3RpZnkoZmFsc2UsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGh0bWw6ICc8c3BhbiBjbGFzcz1cImRhc2hpY29ucyBkYXNoaWNvbnMtc2F2ZWRcIj48L3NwYW4+IENoYW5nZXMgaGF2ZSBiZWVuIHN1Y2Nlc3NmdWxseSBzYXZlZCdcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSkuY2F0Y2goRXZlbnQgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnVpLmxheW91dC5mb2N1cygpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgdXBkYXRlT3JkZXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgJG9yZGVyID0gW107XG5cbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFtpbmRleCwgZWxlbWVudF0gb2YgT2JqZWN0LmVudHJpZXMoalF1ZXJ5KCdbZGF0YS1jb21wb25lbnQ9XCJmaWVsZFwiXVtkYXRhLW5hbWVzcGFjZT1cImVkaXRvclwiXScpKSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCAkaWQgPSBqUXVlcnkoZWxlbWVudCkuYXR0cignZGF0YS1pZCcpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoJGlkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkb3JkZXIucHVzaCgkaWQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgY29uc3QgUmVxdWVzdCA9IChuZXcgQUlLKS5wb3N0bWFuKCdDb21wb3VuZC1zb3J0Jywge1xuICAgICAgICAgICAgICAgICAgICBwYWdlOiBDb21wb3VuZC5wYWdlX29uX2VkaXQgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgb3JkZXI6ICRvcmRlclxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgdHJhbnNwb3J0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgc2VsZiA9IENvbXBvdW5kRWRpdG9yLnZ1ZTtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICByZW1vdmVTZWxlY3RlZFRlbXBsYXRlczogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNlbGYuc2VsZWN0ZWQubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYucmVtb3ZlVGVtcGxhdGUoe3RlbXBsYXRlOiBzZWxmLnNlbGVjdGVkfSkudGhlbihFdmVudCA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYudWkubGF5b3V0LnJlc2V0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYucmVsb2FkUGFnZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICByZW1vdmVUZW1wbGF0ZTogZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZXZlbnQudGVtcGxhdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBSZXF1ZXN0ID0gKG5ldyBBSUspLnBvc3RtYW4oJ0NvbXBvdW5kLXJlbW92ZVRlbXBsYXRlJywge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWdlOiBDb21wb3VuZC5wYWdlX29uX2VkaXQgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGU6IGV2ZW50LnRlbXBsYXRlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZXF1ZXN0LnRoZW4oRXZlbnQgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLnJlbG9hZFBhZ2UoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KS5jYXRjaChFdmVudCA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEZJWE1FXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0sXG5cblxuICAgICAgICAgICAgX19tZW51QWN0aW9uRWRpdFRlbXBsYXRlOiBmdW5jdGlvbiAoZXZlbnQpIHtcblxuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgX19tZXRhRmllbGRDbGFzc19fOiBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgICAgICBjb25zdCAkZXZlbnQgPSBldmVudCB8fCB7fTtcbiAgICAgICAgICAgICAgICBjb25zdCAkZWRpdG9yID0gJGV2ZW50LmVkaXRvciB8fCB7fTtcbiAgICAgICAgICAgICAgICByZXR1cm4gYF9fY29tcG91bmRfZmllbGQgY29sLSR7JGVkaXRvci5jb2wgfHwgMTJ9YDtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgfSxcbiAgICAgICAgZmlsdGVyczoge1xuICAgICAgICAgICAgY2FwaXRhbGl6ZTogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgaWYgKCF2YWx1ZSkgcmV0dXJuICcnXG4gICAgICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZS50b1N0cmluZygpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgdmFsdWUuc2xpY2UoMSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgd2F0Y2g6IHtcbiAgICAgICAgICAgIHNlbGVjdGVkOiBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgICAgICBpZiAoZXZlbnQubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnRvb2xzLnJpZ2h0WzBdLmVuYWJsZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudG9vbHMucmlnaHRbMF0uZW5hYmxlZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sXG4gICAgcmVhZHk6IGZ1bmN0aW9uIChFdmVudCwgJCkge1xuXG4gICAgICAgIC8vIEhvdGtleSByZWdpc3RyYXRpb25cbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIEV2ZW50ID0+IHtcblxuICAgICAgICAgICAgY29uc3Qga2V5ID0gRXZlbnQua2V5IHx8ICcnO1xuICAgICAgICAgICAgY29uc3Qgc2VsZiA9IENvbXBvdW5kRWRpdG9yLnZ1ZSB8fCB7fTtcblxuICAgICAgICAgICAgaWYgKGtleSA9PT0gXCJEZWxldGVcIikge1xuICAgICAgICAgICAgICAgIHNlbGYudHJhbnNwb3J0KCkucmVtb3ZlU2VsZWN0ZWRUZW1wbGF0ZXMoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICB9XG59KSk7Il19